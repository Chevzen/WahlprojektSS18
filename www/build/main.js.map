{"version":3,"sources":["../../src/pages/login/login.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/model/GebaudeModel.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/model/RaumModel.1.ts","../../src/model/Veranstaltung.ts","../../src/model/CampusModel.ts","../../src/app/app.component.ts","../../src/pages/home/home.ts","../../src/pages/page/page.ts","../../src/pages/search/search.ts","../../src/model/Darstellung.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { NavController, AlertController, MenuController, NavParams, ToastController } from 'ionic-angular';\nimport { HomePage } from '../home/home';\nimport { Http, Headers } from '@angular/http';\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   showLogin -> bool ob Login angezeigt wird                                               *\n\t*   benutzername -> String mit dem Benutzernamen im Formular                                *\n\t*   password -> String mit dem Passwort im Formular                                         *\n\t*   token -> String mit dem zu ermittelnden Token                                           *\n\t*   x -> String für die Antwort des Servers                                                 *\n\t*   semester -> String für das zu ermittelnde Semester                                      *\n\t*   speicher -> boolean für die Checkbox -> Standard: true                                  *\n\t*                                                                                           *\n\t********************************************************************************************/\n  showLogin:boolean = true;\n  benutzername:string = '';\n  password:string = '';\n  token:string ='';\n  x:string = '';\n\tsemester:string='';\n\tspeichern = [true];\n\n  constructor(public toastCtrl: ToastController, public navCtrl: NavController, public menuCtrl: MenuController,\n\t\tpublic alertCtrl: AlertController, private http: Http, public navParams: NavParams) {\n\n\t\t}\n\n\t/********************************************************************************************\n  *                                                                                           *\n  *   Funktion wird nach dem Laden der View ausgeführt.                                       *\n  *                                                                                           *\n  ********************************************************************************************/\n  ionViewDidLoad() {\n    console.log('Dat is die LoginPage');\n\n\t\tvar FehlerFeld: HTMLElement = document.getElementById('Fehler');\n\t\tFehlerFeld.style.display = \"none\";\n\n\t\tvar ladeicon: HTMLElement = document.getElementById('laden');\n\t\tladeicon.style.display =\"none\";\n\n\t\t//Wenn Benutzerdaten vorhanden sind, dann Login-formular ausblenden und Login durchführen.\n\t\tif(localStorage.getItem(\"benutzer\") != null && localStorage.getItem(\"passwort\") != null){\n\t\t\tthis.benutzername = localStorage.getItem(\"benutzer\");\n\t\t\tthis.password = localStorage.getItem(\"passwort\");\n\n\t\t\t//Das Loginformular wird ausgeblendet:\n\t\t\tvar formular: HTMLElement = document.getElementById('content');\n\t\t\tformular.style.display = \"none\";\n\t\t\tvar header: HTMLElement = document.getElementById('header');\n\t\t\theader.style.display = \"none\";\n\t\t\t//Der Screen für den automatischen Login wird eingeblendet:\n\t\t\tvar login: HTMLElement = document.getElementById('login');\n\t\t\tlogin.style.display = \"block\";\n\n\t\t\tif(this.navParams.get('item') == 'Aktualisieren'){\n\t\t\t\tthis.loginFunction();\n\t\t\t}else{\n\t\t\t\tthis.aktualisierungsAnfrage();\n\t\t\t}\n\t\t}\n  }\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   Funktion blendet das Fehlerfeld des Loginformulars aus.                                 *\n\t*                                                                                           *\n\t********************************************************************************************/\n  clicked(){\n    var fehlerFeld: HTMLElement = document.getElementById('Fehler');\n    fehlerFeld.style.display = \"none\";\n  }\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   Funktion führt den Login nach dem korrekten Ausfüllen des Formulars durch.              *\n\t*                                                                                           *\n\t********************************************************************************************/\n  doLogin() {\n    if(this.showLogin) {\n      console.log('login im gange');\n\t\t\tconsole.log(\"checkbox: \"+this.speichern);\n      if(this.benutzername.length != 8 || this.password === '') {\n        var fehlerFeld: HTMLElement = document.getElementById('Fehler');\n        fehlerFeld.innerText = \"Benutzername oder Passwort falsch.\";\n        fehlerFeld.style.display = \"block\";\n        return;\n      }\n\n\t\t\tthis.loginFunction();\n\t\t\tvar ladeicon: HTMLElement = document.getElementById('laden');\n\t\t\tladeicon.style.display =\"block\";\n\n    } else {\n      this.showLogin = true;\n    }\n\n  }\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   Funktion filtert aus dem übergebenen String das Token für die                           *\n\t*   Anmeldung beim Server.                                                                  *\n\t*   text -> String mit einem Text, in der das Token steckt                                  *\n\t*                                                                                           *\n\t*   RETURN-Wert: Das csrf-Token                                                             *\n\t*                                                                                           *\n\t********************************************************************************************/\n\tprivate get_Token(text:string) {\n\t\treturn text.substring(text.indexOf(\"csrf-token\")+23, text.indexOf(\"csrf-token\")+111);\n\t}\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   Funktion filtert aus dem übergebenen String das Semester für die                        *\n\t*   Anmeldung beim Server.                                                                  *\n\t*   text -> String mit einem Text, in der das Semester steckt                               *\n\t*                                                                                           *\n\t*   RETURN-Wert: Die ID des Semesters                                                       *\n\t*                                                                                           *\n\t********************************************************************************************/\n\tprivate get_Semester(text:string) {\n\t\treturn text.substring(text.indexOf(\"option selected\")+37, text.indexOf(\"option selected\")+46);\n\t}\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   Funktion filtert aus dem übergebenen String einen bestimmten String heraus,             *\n\t*   um festzustellen, ob die Anmeldung erfolgreich war.                                     *\n\t*   text -> String mit einem Text, in dem die Antwort des Servers steckt                    *\n\t*                                                                                           *\n\t*   RETURN-Wert: Falls Anmeldung erfolgreich -1, sonst eine Zahl >= 0                       *\n\t*                                                                                           *\n\t********************************************************************************************/\n\tprivate get_Header(text:string) {\n\t\treturn text.indexOf(\"Ihre Anmeldung war leider nicht erfolgreich, bitte überprüfen Sie ihre Login-Daten\");\n\t}\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   Funktion gibt eine Fehlermeldung aus.                                                   *\n\t*   meldung1 -> String der ersten Fehlermeldung                                             *\n\t*   meldung2 -> String der zweiten Fehlermeldung                                             *\n\t*                                                                                           *\n\t********************************************************************************************/\n\tprivate fehler(meldung1:string, meldung2:string){\n\t\tvar fehlerFeld: HTMLElement = document.getElementById('Fehler');\n\t\tfehlerFeld.innerText = meldung1;\n\t\tfehlerFeld.style.display = \"block\";\n\t\tvar fehlerFeldZwei: HTMLElement = document.getElementById('Fehler2');\n\t\tfehlerFeldZwei.innerText = meldung2;\n\t\tfehlerFeldZwei.style.display = \"block\";\n\t\tvar ladeicon: HTMLElement = document.getElementById('laden');\n\t\tladeicon.style.display =\"none\";\n\t}\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   Funktion filtert aus dem übergebenen String den Quelltext der ics-Dateien heraus        *\n\t*   text -> String mit der Antwort des Servers, in der der Quelltext steckt                 *\n\t*                                                                                           *\n\t*   RETURN-Wert: Der Inhalt der ics-Datei                                                   *\n\t*                                                                                           *\n\t********************************************************************************************/\n\tprivate get_Plan(text:string) {\n\t\tif(-1 == text.indexOf(\"DOCTYPE\")){\n\t\t\treturn text.substring(text.indexOf(\"_body\")+9, text.indexOf(\"status\")-6);\n\t\t}\n\t\t//Sollte im String \"DOCTYPE\" stehen, dann ist das nicht der Inhalt der ics-Datei:\n\t\tthis.fehler(\"Fehler beim Herunterladen der Daten. Bitte versuche es erneut\",\n\t\t\"Fehler beim Herunterladen der Daten. Bitte App neu starten\");\n\t\treturn \"-1\";\n\t}\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   Funktion lädt die ics-Dateien herunter und speichert sie im localStorage                *\n\t*   options -> der aus der loginFunction übergebenen Header für die get-Anfragen            *\n\t*   stelle -> Zahl, die die Anzahl der Downloads enthält (Beginn bei 0 -> 1. Download)      *\n\t*   loader -> Loader                                                                        *\n\t*                                                                                           *\n\t*   RETURN-Wert: -1 im Fehlerfall                                                           *\n\t*                                                                                           *\n\t********************************************************************************************/\n\tprivate download(options:any, stelle:number){\n\t\t//Arrays mit der id des Raumplans und den Räumen:\n\t\tvar id:string[] = [\n\t\t\t\"1001264429\",\"1001264431\",\"454131924\",\"454131925\",\"454131926\",\"454131927\",\"454131928\",\"454131930\",\"454131931\",\n\t\t\t\"967118069\",\"967118075\",\"967321020\",\"967321022\",\"975705394\",\"984225074\",\"984360376\",\"992677104\",\"992744751\",\n\t\t\t\"1001264469\",\"1001264470\",\"1001264471\",\"1001196781\",\"1001196783\",\"1001264428\"\n\t\t];\n\n\t\tvar raum:string[] = [\n\t\t\t\"D01\",\"D02\",\"D11\",\"D12\",\"D13\",\"D14\",\"D15\",\"D17\",\"D18\",\n\t\t\t\"C001\",\"C007\",\"C035\",\"C037\",\"C113\",\"C213\",\"C237\",\"C305\",\"C313\",\"C361\",\"C375\",\"C377\",\"C405\",\"C407\",\"C413\"\n\t\t];\n\n\t\t//Solange nicht alle Raumpläne heruntergeladen wurden:\n\t\tif(stelle < id.length){\n\t\t\t//Raumplan über id herunterladen\n\t\t\tthis.http.get('https://aor.cs.hs-rm.de/rooms/'+id[stelle]+'/plans.ics', options).subscribe(\n\t\t\t\tresult => {\n\t\t\t\t\tthis.x = JSON.stringify(result, null, 2);\n\t\t\t\t\tthis.x = this.get_Plan(this.x);\n\t\t\t\t\tif(\"-1\" == this.x){\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\t//Raumplan abspeichern\n\t\t\t\t\tlocalStorage.setItem(raum[stelle], this.x);\n\t\t\t\t\t//nächsten Raumplan:\n\t\t\t\t\tthis.download(options,stelle+1);\n\t\t\t\t}, error => {\n\t\t\t\t\tconsole.log(\"Error: \"+ JSON.stringify(error, null, 2));\n\t\t\t\t});\n\t\t}else{\n\t\t\tif(this.speichern){\n\t\t\t\tlocalStorage.setItem(\"benutzer\", this.benutzername);\n\t\t\t\tlocalStorage.setItem(\"passwort\", this.password);\n\t\t\t\tlet toast = this.toastCtrl.create({\n\t\t\t\t\t\tmessage:  \"Benutzerdaten wurden gespeichert! Du kannst deine Benutzerdaten jederzeit löschen.\",\n\t\t\t\t\t\tduration: 3000,\n\t\t\t\t\t\tposition: 'middle',\n\t\t\t\t\t\tcssClass: \"my-toast\"\n\t\t\t\t});\n\t\t\t\ttoast.present();\n\t\t\t}\n\t\t\tthis.navCtrl.setRoot(HomePage);\n\t\t}\n\t}\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   Funktion führt den Login durch.                                                         *\n\t*                                                                                           *\n\t*   RETURN-Wert: -1 im Fehlerfall                                                           *\n\t*                                                                                           *\n\t********************************************************************************************/\n\tprivate loginFunction() {\n\t\t//Header für die Anmeldung\n\t\tlet options = {\n\t\t\theaders: new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' }),\n\t\t\twithCredentials: true\n\t\t};\n\n\t\t//GET-Anfrage um den Content der Seite zu bekommen, damit das Token gefunden werden kann\n\t\tthis.http.get('https://aor.cs.hs-rm.de/login', options).subscribe(\n\t\t\tresult => {\n\t\t\t\tthis.x = JSON.stringify(result, null, 2);\n\t\t\t\tthis.token = this.get_Token(this.x);\n\t\t\t\tthis.semester = this.get_Semester(this.x);\n\t\t\t\tthis.token = encodeURIComponent(this.token);\n\n\t\t\t\t//Der Body für die Anmeldung:\n\t\t\t\tvar body = 'utf8=%E2%9C%93' +\n\t\t\t\t'&authenticity_token=' + this.token +\n\t\t\t\t'&login[account]=' + this.benutzername +\n\t\t\t\t'&login[password]=' + this.password +\n\t\t\t\t'&login[term_id]=' + this.semester +\n\t\t\t\t'&commit=Anmeldung';\n\n\t\t\t\tthis.http.post('https://aor.cs.hs-rm.de/login', body, options).subscribe(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tif(-1 == this.get_Header(JSON.stringify(result, null, 2))){\n\n\t\t\t\t\t\t\tvar fehlerFeldZwei: HTMLElement = document.getElementById('Fehler2');\n\t\t\t\t\t\t\tfehlerFeldZwei.innerText = \"Login war erfolgreich. Daten werden geladen...\";\n\t\t\t\t\t\t\tfehlerFeldZwei.style.display = \"block\";\n\t\t\t\t\t\t\tvar lademessage:HTMLElement = document.getElementById('lademessage');\n\t\t\t\t\t\t\tlademessage.innerText = \"Login war erfolgreich. Daten werden geladen...\";\n\n\t\t\t\t\t\t\t//Wenn die Anmeldung erfolgreich war, werden die Raumpläne heruntergeladen:\n\t\t\t\t\t\t\tthis.download(options,0);\n\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\tthis.fehler(\"Benutzername oder Passwort falsch.\", \"Login fehlgeschlagen. Bitte starte die App erneut.\");\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, error => {\n\t\t\t\t\t\t//console.log(\"Error: POST: \"+ JSON.stringify(error, null, 2));;\n\t\t\t\t\t\tthis.fehler(\"Benutzername oder Passwort falsch.\", \"Login fehlgeschlagen. Bitte starte die App erneut.\");\n\t\t\t\t\t\treturn -1;\n\n\t\t\t\t\t});//post\n\t\t\t}, error => {\n\t\t\t\tconsole.log(\"Error: \"+ JSON.stringify(error, null, 2));\n\t\t\t});//get\n\t}\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   Funktion prüft ob der Benutzer zuletzt zu Beginn des letzten Semesters aufgefordert     *\n\t*   wurde zu aktualisieren.                                                                 *\n\t*   Beispiel:                                                                               *\n\t*   Der Benutzer öffnet die App am 3.4.2018 also zu Beginn des Sommersemesters.             *\n\t*   Im localStorage steht ein Datum, an dem er das letzte Mal aufgefordert wurde die        *\n\t*   Raumpläne zu aktualisieren.                                                             *\n\t*   In diesem Beispiel wurde der Benutzer am 4.10.2017 zuletzt aufgefordert.                *\n\t*   Also liegt der letzte Aktualisierungsvorgang im letzten Semester.                       *\n\t*   Der Benutzer kann natürlich während des letzten Semesters auch nach dem 4.10.2017       *\n\t*   über das Menü aktualisiert haben, aber das spielt hier keine Rolle.                     *\n\t*                                                                                           *\n\t*   RETURN-Wert: 0 wenn kein neues Semester begonnen hat, sonst 1                           *\n\t*                                                                                           *\n\t********************************************************************************************/\n\tprivate getSemesterBeginn(){\n\t\tvar jetzt = new Date();\n\t\tvar monat = jetzt.getMonth();\n\t\tvar tag = jetzt.getDate();\n\n\t\tmonat++;\n\n\t\tif(localStorage.getItem('aktuell') != null){\n\t\t\tvar old = new Date(localStorage.getItem('aktuell'));\n\t\t\tswitch(monat){\n\t\t\t\t//Wenn der aktuelle Monat April ist und zuletzt im Oktober\n\t\t\t\t//durch den Alert aktualisiert wurde wird 1 zurückgegeben\n\t\t\t\tcase 4:\n\t\t\t\tif(old.getMonth()+1 == 10){\n\t\t\t\t\treturn 1;\n\t\t\t\t}else{\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\t//Wenn der aktuelle Monat Oktober ist und zuletzt im April\n\t\t\t\t//durch den Alert aktualisiert wurde wird 1 zurückgegeben\n\t\t\t\tcase 10:\n\t\t\t\tif(old.getMonth()+1 == 4){\n\t\t\t\t\treturn 1;\n\t\t\t\t}else{\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(monat == 4 && (tag >= 1 && tag <= 10) || monat == 10 && (tag >= 1 && tag <= 10)){\n\t\t\t//Wenn das Datum zwischen dem 1.4. und dem 10.4.\n\t\t\t//oder zwischen dem 1.10. und dem 10.10. liegt hat ein neues Semester begonnen!\n\t\t\tconsole.log(\"1\");\n\t\t\treturn 1;\n\t\t}else{\n\t\t\tconsole.log(\"0\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   Funktion zeigt entweder einen Aktualisierungshinweis an oder leitet auf die             *\n\t*   Startseite weiter.                                                                      *\n\t*                                                                                           *\n\t********************************************************************************************/\n\taktualisierungsAnfrage(){\n\t\t//Es wird ermittelt ob ein Semester begonnen hat:\n\t\t//Wenn ja, wird außerdem noch überprüft, ob bereits durch diesen Alert zu Semesterbeginn\n\t\t//aktualisiert wurde.\n\t\tvar aktualisieren:number = this.getSemesterBeginn();\n\t\tif(aktualisieren == 1){\n\t\t\tlet alert = this.alertCtrl.create({\n\t\t\t\ttitle: 'Aktualisieren',\n\t\t\t\tmessage: 'Ein neues Semester hat begonnen. Möchtest du die Raumpläne aktualisieren?',\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: 'Nein',\n\t\t\t\t\t\trole: 'cancel',\n\t\t\t\t\t\thandler: () => {\n\t\t\t\t\t\t\talert = null;\n\t\t\t\t\t\t\tthis.navCtrl.setRoot(HomePage);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: 'Ja',\n\t\t\t\t\t\thandler: () => {\n\t\t\t\t\t\t\t//Es wird das Datum des Aktualisierungshinweises gesetzt:\n\t\t\t\t\t\t\tvar jetzt = new Date(\"Tue Apr 03 2018 11:09:54 GMT+0200 (CEST)\");\n\t\t\t\t\t\t\tlocalStorage.setItem('aktuell', jetzt.toString());\n\t\t\t\t\t\t\tthis.loginFunction();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\t\talert.present();\n\t\t}else{\n\t\t\t//Wenn nicht aktualisiert werden muss:\n\t\t\tthis.navCtrl.setRoot(HomePage);\n\t\t}\n\t}\n\n\t/********************************************************************************************\n\t*                                                                                           *\n\t*   Funktion setzt das Sidemenü für die Loginseite aus.                                     *\n\t*                                                                                           *\n\t********************************************************************************************/\n\tionViewWillEnter() {\n       this.menuCtrl.swipeEnable( false )\n   }\n\n\t/********************************************************************************************\n \t*                                                                                           *\n \t*   Funktion setzt das Sidemenü nach der Loginseite aktiv.                                  *\n \t*                                                                                           *\n \t********************************************************************************************/\n   ionViewDidLeave() {\n       this.menuCtrl.swipeEnable( true )\n   }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 115;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 115\n// module chunks = 3","var map = {\n\t\"../pages/login/login.module\": [\n\t\t285,\n\t\t2\n\t],\n\t\"../pages/page/page.module\": [\n\t\t286,\n\t\t1\n\t],\n\t\"../pages/search/search.module\": [\n\t\t287,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 157;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 157\n// module chunks = 3","import { RaumModel } from \"./RaumModel.1\";\nimport { Darstellung } from './Darstellung';\n\nexport class GebaudeModel{\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   gebaudename -> Name eines Gebäudes                                                      *\n  *   raume -> Array mit allen Räumen eines Gebäudes                                          *\n  *   zugangsberechtigung -> Array mit allen Räumen mit Zugangsbeschränkung                   *\n  *                                                                                           *\n  ********************************************************************************************/\n  gebaudename: string = \"\";\n  raume: RaumModel[] = [];\n  zugangsberechtigung:string[] = [\"D01\",\"D12\",\"D13\",\"D15\",\"D18\",\"C001\",\"C007\",\"C113\",\"C213\",\"C237\",\"C305\",\"C313\",\"C361\",\"C375\",\"C377\",\"C413\"];\n\n\n  constructor(gebaudename:string){\n      this.gebaudename = gebaudename;\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion fügt einen Raum in das Array raume ein                                         *\n  *                                                                                           *\n  *   raum -> Raum, der hinzugefügt werden soll                                               *\n  *                                                                                           *\n  ********************************************************************************************/\n  addRaum(raum:RaumModel){\n    this.raume.push(raum);\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion, die alle freien Räume zu allen Timeslots ermittelt                            *\n  *                                                                                           *\n  *   RETURN-Wert: Alle freien Räume                                                          *\n  *                                                                                           *\n  ********************************************************************************************/\n  getFreeRooms(){\n      var result:string[] = [];\n      var slots:string[] = this.giveSlots();\n      var darstellung:Darstellung;\n      switch(this.gebaudename){\n        case \"C\": darstellung = new Darstellung(0);break;\n        case \"D\": darstellung = new Darstellung(1);break;\n      }\n      for(var i:number = 0;i<slots.length;i++){\n        switch(slots[i]){\n          case \"08:15:00\": result.push(\"08:15 bis 09:45:\");break;\n          case \"10:00:00\": result.push(\"10:00 bis 11:30:\");break;\n          case \"11:45:00\": result.push(\"11:45 bis 13:15:\");break;\n          case \"14:15:00\": result.push(\"14:15 bis 15:45:\");break;\n          case \"16:00:00\": result.push(\"16:00 bis 17:30:\");break;\n          case \"17:45:00\": result.push(\"17:45 bis 19:15:\");break;\n          case \"19:30:00\": result.push(\"19:30 bis 21:00:\");break;\n          case \"21:00:00\": result.push(\"ab 21:00:\");break;\n        }\n        this.raume.forEach(raum => {\n          if(raum.isFree(slots[i], darstellung.giveWochentag())){\n            result.push(raum.raumname);\n          }\n        });\n      }\n      return result;\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion gibt zur aktuellen Uhrzeit die nachfolgenden Timeslots zurück.                 *\n  *                                                                                           *\n  *   RETURN-Wert: Alle Timeslots                                                             *\n  *                                                                                           *\n  ********************************************************************************************/\n  private giveSlots(){\n    switch(true){\n      case this.giveUhrzeit() == \"08:15:00\": return [\"08:15:00\", \"10:00:00\", \"11:45:00\", \"14:15:00\", \"16:00:00\", \"17:45:00\", \"19:30:00\", \"21:00:00\"];\n      case this.giveUhrzeit() == \"10:00:00\": return [\"10:00:00\", \"11:45:00\", \"14:15:00\", \"16:00:00\", \"17:45:00\", \"19:30:00\", \"21:00:00\"];\n      case this.giveUhrzeit() == \"11:45:00\": return [\"11:45:00\", \"14:15:00\", \"16:00:00\", \"17:45:00\", \"19:30:00\", \"21:00:00\"];\n      case this.giveUhrzeit() == \"14:15:00\": return [\"14:15:00\", \"16:00:00\", \"17:45:00\", \"19:30:00\", \"21:00:00\"];\n      case this.giveUhrzeit() == \"16:00:00\": return [\"16:00:00\", \"17:45:00\", \"19:30:00\", \"21:00:00\"];\n      case this.giveUhrzeit() == \"17:45:00\": return [\"17:45:00\", \"19:30:00\", \"21:00:00\"];\n      case this.giveUhrzeit() == \"19:30:00\": return [\"19:30:00\", \"21:00:00\"];\n      case this.giveUhrzeit() == \"21:00:00\": return [\"21:00:00\"]\n      default: break;\n    }\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion gibt die Uhrzeit des aktuellen Slots zurück                                    *\n  *                                                                                           *\n  *   RETURN-Wert: Die Uhrzeit des aktuellen Slots                                            *\n  *                                                                                           *\n  ********************************************************************************************/\n  private giveUhrzeit(){\n    var jetzt = new Date();\n    var stunden = jetzt.getHours();\n    var minuten = jetzt.getMinutes();\n    switch(true){\n      /*0:00 - 0:59*/case (stunden == 0) && (minuten >= 0 && minuten <= 59): console.log(\"1\");return \"08:15:00\";\n      /*1:00 - 1:59*/case (stunden == 1) && (minuten >= 0 && minuten <= 59): console.log(\"2\");return \"08:15:00\";\n      /*2:00 - 2:59*/case (stunden == 2) && (minuten >= 0 && minuten <= 59): console.log(\"3\");return \"08:15:00\";\n      /*3:00 - 3:59*/case (stunden == 3) && (minuten >= 0 && minuten <= 59): console.log(\"4\");return \"08:15:00\";\n      /*4:00 - 4:59*/case (stunden == 4) && (minuten >= 0 && minuten <= 59): console.log(\"5\");return \"08:15:00\";\n      /*5:00 - 5:59*/case (stunden == 5) && (minuten >= 0 && minuten <= 59): console.log(\"6\");return \"08:15:00\";\n      /*6:00 - 6:59*/case (stunden == 6) && (minuten >= 0 && minuten <= 59): console.log(\"7\");return \"08:15:00\";\n      /*7:00 - 7:59*/case (stunden == 7) && (minuten >= 0 && minuten <= 59): console.log(\"8\");return \"08:15:00\";\n      /*8:00 - 8:59*/case (stunden == 8) && (minuten >= 0 && minuten <= 59): console.log(\"9\");return \"08:15:00\";\n      /*9:00 - 9:44*/case (stunden == 9) && (minuten >= 0 && minuten <= 44): console.log(\"10\");return \"08:15:00\";\n      /*9:45 - 9:59*/case (stunden == 9) && (minuten >= 45 && minuten <= 59): console.log(\"11\");return \"10:00:00\";\n      /*10:00 - 10:59*/case (stunden == 10) && (minuten >= 0 && minuten <= 59): console.log(\"12\");return \"10:00:00\";\n      /*11:00 - 11:44*/case (stunden == 11) && (minuten >= 0 && minuten <= 44): console.log(\"13\");return \"10:00:00\";\n      /*11:45 - 11:59*/case (stunden == 11) && (minuten >= 45 && minuten <= 59): console.log(\"14\");return \"11:45:00\";\n      /*12:00 - 12:59*/case (stunden == 12) && (minuten >= 0 && minuten <= 59): console.log(\"15\");return \"11:45:00\";\n      /*13:00 - 13:59*/case (stunden == 13) && (minuten >= 0 && minuten <= 59): console.log(\"16\");return \"11:45:00\";\n      /*14:00 - 14:14*/case (stunden == 14) && (minuten >= 0 && minuten <= 14): console.log(\"17\");return \"11:45:00\";\n      /*14:15 - 14:59*/case (stunden == 14) && (minuten >= 15 && minuten <= 59): console.log(\"18\");return \"14:15:00\";\n      /*15:00 - 15:59*/case (stunden == 15) && (minuten >= 0 && minuten <= 59): console.log(\"19\");return \"14:15:00\";\n      /*16:00 - 16:59*/case (stunden == 16) && (minuten >= 0 && minuten <= 59): console.log(\"20\");return \"16:00:00\";\n      /*17:00 - 17:44*/case (stunden == 17) && (minuten >= 0 && minuten <= 44): console.log(\"21\");return \"16:00:00\";\n      /*17:45 - 17:59*/case (stunden == 17) && (minuten >= 45 && minuten <= 59): console.log(\"22\");return \"17:45:00\";\n      /*18:00 - 18:59*/case (stunden == 18) && (minuten >= 0 && minuten <= 59): console.log(\"23\");return \"17:45:00\";\n      /*19:00 - 19:29*/case (stunden == 19) && (minuten >= 0 && minuten <= 29): console.log(\"24\");return \"17:45:00\";\n      /*19:30 - 19:59*/case (stunden == 19) && (minuten >= 30 && minuten <= 59): console.log(\"25\");return \"19:30:00\";\n      /*20:00 - 20:59*/case (stunden == 20) && (minuten >= 0 && minuten <= 59): console.log(\"26\");return \"19:30:00\";\n      /*21:00 - 21:59*/case (stunden == 21) && (minuten >= 0 && minuten <= 59): console.log(\"27\");return \"21:00:00\";\n      /*22:00 - 22:59*/case (stunden == 22) && (minuten >= 0 && minuten <= 59): console.log(\"28\");return \"21:00:00\";\n      /*23:00 - 23:59*/case (stunden == 23) && (minuten >= 0 && minuten <= 59): console.log(\"29\");return \"21:00:00\";\n      default: break;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/GebaudeModel.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { HttpClientModule, HttpClient} from '@angular/common/http';\nimport { HttpModule } from '@angular/http'\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { Gebaude } from '../pages/page/page';\nimport { Search } from '../pages/search/search';\nimport { LoginPage } from '../pages/login/login';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    Gebaude,\n    Search,\n    LoginPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpClientModule,\n    HttpModule\n\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    Gebaude,\n    Search,\n    LoginPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    HttpClient,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Veranstaltung } from \"./Veranstaltung\";\n\n\n\nexport class RaumModel{\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   raumname -> Name des Raums                                                              *\n  *   veranstaltungen -> Array, in den Veranstaltungen eines Raumes geschrieben werden        *\n  *                                                                                           *\n  ********************************************************************************************/\n  raumname:string = \"\";\n  veranstaltungen:Veranstaltung [] = [];\n\n\n  constructor (raumname:string){\n    this.raumname = raumname;\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion fügt einem Raum eine Veranstaltung hinzu                                       *\n  *                                                                                           *\n  *   veranstaltung -> Veranstaltung, die hinzugefügt werden soll                             *\n  *                                                                                           *\n  ********************************************************************************************/\n  addVeranstaltung(veranstaltung: Veranstaltung){\n    this.veranstaltungen.push(veranstaltung);\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion gibt einen übergebenen Text in eine Array aufgesplittet zurück                 *\n  *                                                                                           *\n  *   text -> Text, der gesplittet werden soll                                                *\n  *                                                                                           *\n  *   RETURN-Wert: Array mit Einträgen aus dem übergebenen Text(ics-Datei)                    *\n  *                                                                                           *\n  ********************************************************************************************/\n  getICS(text:string) {\n    text.trim();\n    return text.split(\"\\\\r\\\\n\");\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion ermittelt, wann der Raum frei ist                                              *\n  *                                                                                           *\n  *   uhrzeit -> Uhrzeit, zu der der Raum frei sein soll                                      *\n  *   wochentag -> Wochentag, zu dem der Raum frei sein soll                                  *\n  *                                                                                           *\n  *   RETURN-Wert: true, wenn der Raum frei ist; false falls nicht                            *\n  *                                                                                           *\n  ********************************************************************************************/\n  isFree(uhrzeit:string, wochentag:string){\n    var result:any = true;\n    this.veranstaltungen.forEach(veranstaltung => {\n      if(veranstaltung.wochentag == wochentag && veranstaltung.uhrzeit == uhrzeit){\n        result = false;\n      }\n    });\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/RaumModel.1.ts","export class Veranstaltung{\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   name -> Name der Veranstaltung                                                          *\n  *   wochentag -> Wochentag der Veranstaltung                                                *\n  *   uhrzeit -> Uhrzeit, zu der die Veranstaltung beginnt                                    *\n  *   enduhrzeit -> Uhrzeit, zu der die Veranstaltung zu Ende ist                             *\n  *                                                                                           *\n  ********************************************************************************************/\n  name:string = \"\";\n  wochentag:string = \"\";\n  uhrzeit:string= \"\";\n  enduhrzeit:string= \"\";\n\n  constructor (name: string, wochentag: string, uhrzeit: string,enduhrzeit:string){\n      this.name = name;\n      this.uhrzeit = uhrzeit;\n      this.wochentag = wochentag;\n      this.enduhrzeit = enduhrzeit;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/Veranstaltung.ts","import { GebaudeModel } from \"./GebaudeModel\";\n\nexport class CampusModel{\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   campusname -> Name des Campus                                                           *\n  *   gebaude -> Array, mit Gebäuden                                                          *\n  *                                                                                           *\n  ********************************************************************************************/\n  campusname: string =\"\";\n  gebaude: GebaudeModel[] = [];\n\n\n  constructor(name:string){\n    this.campusname = name;\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion fügt ein Gebäude dem Array gebaude hinzu                                       *\n  *                                                                                           *\n  *   gebaude -> Gebäude, das in den Array gebaude eingefügt werden soll                      *\n  *                                                                                           *\n  ********************************************************************************************/\n  addGebaude(gebaude:GebaudeModel){\n    this.gebaude.push(gebaude);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/CampusModel.ts","import { Component,ViewChild } from '@angular/core';\nimport { Platform, Nav } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { HomePage } from '../pages/home/home';\nimport { Gebaude } from '../pages/page/page';\nimport { Search } from '../pages/search/search';\nimport { LoginPage } from '../pages/login/login';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav:Nav;\n  rootPage:any = LoginPage;\n  navCtrl:any;\n  pages: Array<{title: string, component: any, item: string}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\n  this.platform.ready().then(() => {\n    this.statusBar.styleDefault();\n    this.splashScreen.hide;\n    //Der Hardware-Backbutton des Handys bekommt eine Aktion:\n    platform.registerBackButtonAction(() => {\n      var page:string;\n      if(null != localStorage.getItem(\"page\")){\n        page = localStorage.getItem(\"page\");\n        switch(page){\n          case \"room\":\n          console.log(\"backPressed 1\");return;\n        }\n      }\n      this.nav.pop();\n      console.log(\"backPressed 1\");\n      //this.navCtrl.setRoot(HomePage);\n    },1);\n  });\n\n  //Die Seiten des Menüs:\n    this.pages = [\n      { title: 'Campusplan', component: HomePage, item: \"Home\" },\n      { title: 'Gebäude C', component: Gebaude, item: \"C\" },\n      { title: 'Gebäude D', component: Gebaude, item: \"D\" },\n      { title: 'Raumsuche', component: Search, item: \"Search\" },\n      { title: 'Aktualisieren', component: LoginPage, item: \"Aktualisieren\"}\n    ];\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion öffnet die übergebene Seite                                                    *\n  *                                                                                           *\n  *   page -> Seite, die geöffnet werden soll                                                 *\n  *   item -> item mit dem Inhalt, der an die Seite übermittelt werden soll                   *\n  *                                                                                           *\n  ********************************************************************************************/\n  openPage(page, item) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.push(page.component, {item: item});\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion ruft die Startseite auf                                                        *\n  *                                                                                           *\n  ********************************************************************************************/\n  deleteDaten() {\n    this.nav.setRoot(HomePage, {item: \"daten\"});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\nimport { AlertController, NavParams, Platform, ToastController } from 'ionic-angular';\nimport { NavController } from 'ionic-angular';\nimport { Gebaude } from '../page/page';\nimport { Search } from '../search/search';\nimport { Darstellung } from '../../model/Darstellung';\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   freeRooms -> Array mit allen freien Räumen                                              *\n  *   darstellung -> Objekt der Klasse Darstellung                                            *\n  *   favoriten -> Array mit allen markierten Räumen                                          *\n  *   temp -> Array mit allen freien markierten Räumen                                        *\n  *                                                                                           *\n  ********************************************************************************************/\n  private freeRooms:string[];\n  private darstellung:Darstellung;\n  private favoriten:string[];\n  private temp:string[] = [];\n\n  constructor(public platform: Platform, public toastCtrl: ToastController, public navCtrl: NavController,\n    private alertCtrl: AlertController, public navParams: NavParams) {\n\n    }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion wird nach dem Laden der View ausgeführt.                                       *\n  *                                                                                           *\n  ********************************************************************************************/\n  ionViewDidLoad(){\n    localStorage.setItem(\"page\",\"Home\");\n    if(localStorage.getItem(\"markiert\") != null){\n      this.favoriten = localStorage.getItem(\"markiert\").split(\",\");\n\n      var h = 0;\n\n      for(h = 0; h < 2; h++) {\n        this.darstellung = new Darstellung(h);\n        this.darstellung.parseToCampus();\n        this.freeRooms = this.darstellung.freeRooms;\n\n        this.freieMarkierte();\n      }\n    }\n\n    if(this.navParams.get(\"item\") == \"daten\"){\n      this.deleteDaten();\n    }\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion ermittelt die aktuell freien, markierten Räume.                                *\n  *   Diese werden in den Array temp geschrieben.                                             *\n  *                                                                                           *\n  ********************************************************************************************/\n  freieMarkierte(){\n    var c = 0;\n    var e = 0;\n    for(var i = 0; i < this.favoriten.length; i++) {\n      //Alle Favoriten durchgehen\n      c = 0;\n      for(var x = 0; x < this.freeRooms.length; x++) {\n        //Alle freien Räume durchgehen\n        if(c == 2) {\n          break;\n        }\n        //Wenn String ein Zeitslot ist\n        //Also mit einer Zahl statt einem Buchstaben beginnt\n        if(this.freeRooms[x].charAt(0) == '0' || this.freeRooms[x].charAt(0) == '1' ||\n          this.freeRooms[x].charAt(0) == '2' || this.freeRooms[x].charAt(0) == '3' ||\n          this.freeRooms[x].charAt(0) == '4' || this.freeRooms[x].charAt(0) == '5' ||\n          this.freeRooms[x].charAt(0) == '6' || this.freeRooms[x].charAt(0) == '7' ||\n          this.freeRooms[x].charAt(0) == '8' || this.freeRooms[x].charAt(0) == '9') {\n\n          c++;\n          //console.log(\"Slot endeckt c: \" + c);\n        }//if\n        else{\n          //Wenn Favoriten im ersten Slot der freien Räume sind\n          //console.log(\"Raum: \" + this.freeRooms[x]);\n          if(this.freeRooms[x] == this.favoriten[i]) {\n            //console.log(\"Dieser Raum ist in den Favoriten\");\n            //Ist der Favorit schon in Temp\n            for(var t = 0; t < this.temp.length; t++) {\n              if(this.temp[t] == this.favoriten[i]) {\n                e = 1;\n              }//if\n            }//for t\n            if(e == 0) {\n              this.temp.push(this.favoriten[i]);\n            }//if\n              e = 0;\n          }//if\n        }//else\n      }//for x\n    }//for i\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion ruft das Gebäude auf und übermittelt den Namen des Raums.                      *\n  *                                                                                           *\n  *   temp -> Name des Raums auf den geklickt wurde                                           *\n  *                                                                                           *\n  ********************************************************************************************/\n  onTip(temp){\n    this.navCtrl.push(Gebaude, {item: temp});\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion leitet weiter auf page.html                                                    *\n  *   Es wird das item \"C\" an die Seite übermittelt um die Seite für das C-Gebäude            *\n  *   zu erstellen.                                                                           *\n  *                                                                                           *\n  ********************************************************************************************/\n  nextC() {\n    this.navCtrl.push( Gebaude, {item: \"C\"});\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion leitet weiter auf page.html                                                    *\n  *   Es wird das item \"D\" an die Seite übermittelt um die Seite für das D-Gebäude            *\n  *   zu erstellen.                                                                           *\n  *                                                                                           *\n  ********************************************************************************************/\n  nextD() {\n    this.navCtrl.push( Gebaude, {item: \"D\"});\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion leitet weiter auf search.html                                                  *\n  *                                                                                           *\n  ********************************************************************************************/\n  search() {\n    this.navCtrl.push( Search);\n    localStorage.setItem(\"from\",\"Home\");\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion öffnet die Datenverwaltung                                                     *\n  *                                                                                           *\n  ********************************************************************************************/\n  deleteDaten() {\n    var raum:string[] = [\n      \"D01\",\"D02\",\"D11\",\"D12\",\"D13\",\"D14\",\"D15\",\"D17\",\"D18\",\n  \t  \"C001\",\"C007\",\"C035\",\"C037\",\"C113\",\"C213\",\"C237\",\"C305\",\"C313\",\"C361\",\"C375\",\"C377\",\"C405\",\"C407\",\"C413\"\n    ];\n    let alert = this.alertCtrl.create({\n      title: 'Datenverwaltung',\n      message: 'Welche Daten möchtest du löschen?',\n      buttons: [\n        {\n          text: 'Nichts',\n          role: 'cancel',\n          handler: () => {\n            alert = null;\n          }\n        },\n        {\n          text: 'Benutzername und Passwort',\n          handler: () => {\n            localStorage.removeItem(\"benutzer\");\n            localStorage.removeItem(\"passwort\");\n            this.toasts(\"Benutzerdaten gelöscht!\");\n          }\n        },\n        {\n          text: 'Markierte Räume',\n          handler: () => {\n            localStorage.removeItem(\"markiert\");\n            this.toasts(\"Markierte Räume gelöscht!\");\n          }\n        },\n        {\n          text: 'Alles',\n          handler: () => {\n            alert = null;\n            let alert1 = this.alertCtrl.create({\n              title: 'Warnung!',\n              message: 'Alle Daten löschen und die App schließen?',\n              buttons: [\n                {\n                  text: 'Nein',\n                  role: 'cancel',\n                  handler: () => {\n                    alert1 = null;\n                  }\n                },\n                {\n                  text: 'Ja',\n                  handler: () => {\n                    localStorage.removeItem(\"benutzer\");\n                    localStorage.removeItem(\"passwort\");\n                    localStorage.removeItem(\"markiert\");\n                    localStorage.removeItem(\"page\");\n                    localStorage.removeItem(\"from\");\n                    localStorage.removeItem(\"aktuell\");\n                    localStorage.removeItem(\"markiert\");\n                    for(var i:number = 0; i < raum.length; i++){\n                      localStorage.removeItem(raum[i]);\n                    }\n                    this.toasts(\"Alle Daten wurden gelöscht!\");\n                    this.platform.exitApp();\n                  }\n                }\n              ]\n            });\n            alert1.present();\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion erstellt eine Meldung                                                          *\n  *   message -> String mit der Nachricht, die die Meldung enthalten soll                     *\n  *                                                                                           *\n  ********************************************************************************************/\n  toasts(message:string){\n    let toast = this.toastCtrl.create({\n        message:  message,\n        duration: 2000,\n        position: 'middle',\n        cssClass: \"my-toast\"\n    });\n    toast.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component, ViewChild } from '@angular/core';\nimport { Content, Platform, Nav } from 'ionic-angular';\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\nimport { HomePage } from '../home/home';\nimport { Search } from '../search/search';\nimport { Darstellung } from '../../model/Darstellung';\n\n/********************************************************************************************\n*                                                                                           *\n*   ueberschrift -> Array für die Überschrift der Seite                                     *\n*                                                                                           *\n********************************************************************************************/\nvar ueberschrift:string[] = [];\n\n@IonicPage()\n@Component({\n  selector: 'gebaude',\n  templateUrl: 'page.html',\n})\nexport class Gebaude {\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   ueberschrift -> Array für die Überschriften der Seite                                   *\n  *   freeRooms -> Array mit den freien Räumen                                                *\n  *   zugang -> Array mit den Räumen, die eine Zugangsbeschränkung haben                      *\n  *   markiert -> Array mit allen markierten Räumen                                           *\n  *   entmarkiert -> Array mit allen nicht markierten Räumen                                  *\n  *                                                                                           *\n  ********************************************************************************************/\n  private ueberschrift:string[] = ueberschrift;\n  private freeRooms:string[] = [];\n  private zugang:string[] = [];\n  private markiert:string[] = [];\n  private entmarkiert:string[] = [\n    \"D01\",\"D02\",\"D12\",\"D13\",\"D14\",\"D15\",\"D17\",\"D18\",\n    \"C001\",\"C007\",\"C035\",\"C037\",\"C113\",\"C213\",\"C237\",\"C305\",\"C313\",\"C361\",\"C375\",\"C377\",\"C405\",\"C407\",\"C413\"\n  ];\n\n\n  @ViewChild(Content) content: Content;\n  @ViewChild(Nav) nav:Nav;\n\n  private darstellung:Darstellung;\n  constructor(public platform: Platform, public toastCtrl: ToastController, public navCtrl: NavController,\n    public navParams: NavParams) {\n\n    //Der Hardware-Backbutton des Handys bekommt eine Aktion:\n    platform.registerBackButtonAction(() => {\n      var page:string;\n      if(null != localStorage.getItem(\"page\")){\n        page = localStorage.getItem(\"page\");\n        switch(page){\n          case \"room\":\n          this.backClicked();\n          console.log(\"backPressed 1\");return;\n        }\n      }\n      this.nav.pop();\n      console.log(\"backPressed 1\");\n    },1);\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion wird nach dem Laden der View ausgeführt.                                       *\n  *                                                                                           *\n  ********************************************************************************************/\n  ionViewDidLoad() {\n    console.log(\"NAVPARAMS: \"+ this.navParams.get('item'));\n    var page:string = this.navParams.get('item');\n    var show: HTMLElement = document.getElementById('Lehraussen');\n    show.style.display = \"none\";\n    var innen: HTMLElement = document.getElementById('Lehrinnen');\n    innen.style.display = \"none\";\n    var span1: HTMLElement = document.getElementById('span1');\n    span1.style.display = \"none\";\n    var span2: HTMLElement = document.getElementById('span2');\n    span2.style.display = \"none\";\n    var button: HTMLElement = document.getElementById('button');\n    button.style.display = \"none\";\n    console.log('ionViewDidLoad '+page+'Page');\n    var tmp:string = \"\";\n\n    console.log(page.length);\n    if(page.length > 1){\n      console.log(page);\n      tmp = page;\n      page = page.substring(0,1);\n    }\n\n    //Unterscheide Seiten:\n    switch(page){\n      case \"C\":\n        console.log(\"C\");\n        this.darstellung = new Darstellung(0);\n        ueberschrift[0] = \"C-Gebäude\";\n        ueberschrift[1] = \"Folgende Räume sind zur Zeit im C-Gebäude frei:\";\n        break;\n      case \"D\":\n        console.log(\"D\");\n        this.darstellung = new Darstellung(1);\n        ueberschrift[0] = \"D-Gebäude\";\n        ueberschrift[1] = \"Folgende Räume sind zur Zeit im D-Gebäude frei:\";\n        break;\n    }\n\n    console.log(this.darstellung);\n    this.darstellung.parseToCampus();\n    console.log(this.darstellung);\n    this.freeRooms = this.darstellung.freeRooms;\n    this.zugang = this.darstellung.zugang;\n    console.log(this.freeRooms);\n    console.log(this.zugang);\n    //Favoriten laden:\n    this.getMarkierung();\n    console.log(\"Markiert: \"+this.markiert);\n    console.log(\"Entmarkiert: \"+this.entmarkiert);\n    //Raumplan anzeigen, falls gefordert durch Startseite:\n    if(tmp != \"\"){\n      this.getL(tmp);\n    }\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion zeigt Meldung für Räume mit Zugangsbeschränkung                                *\n  *   raum -> String mit dem Namen des Raums                                                  *\n  *                                                                                           *\n  ********************************************************************************************/\n  onTip(raum:string){\n    this.toasts(\"Für den Raum \"+raum+\" brauchst du eine Zugangsberechtigung.\");\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion markiert bzw. entmarkiert Räume                                                *\n  *   item -> Raumname                                                                        *\n  *                                                                                           *\n  ********************************************************************************************/\n  makeFav(item) {\n    //Gehe alle Räume durch\n    var isDelete:number = 0;\n    var tmp:string[] = this.markiert;\n    //Gehe über alle Favoriten druch\n    for(var i:number = 0; i < tmp.length; i++) {\n      //Ist der angeklickte Raum in den Favoriten? Lösche ihn\n      if(tmp[i] == item) {\n        tmp.splice(i,1);\n        this.toasts('Raum '+item+' wurde aus der Liste \\\"Markiert\\\" entfernt.');\n        isDelete = -1;\n        //Der gelöschte Eintrag wird aus den markierten entfernt:\n        this.entferneEntmarkiertAusMarkiert(item);\n      }\n    }\n    //Wenn der Raum nicht in den Favoriten ist, füge ihn hinzu\n    if(isDelete == 0) {\n      tmp.push(item);\n      this.toasts('Raum '+item+' wurde markiert.');\n      //Der hinzugefügte Eintrag wird aus den entmarkierten gelöscht:\n      this.entferneMarkiertAusEntmarkiert();\n    }\n    localStorage.setItem(\"markiert\", tmp.join(\",\"));\n    this.markiert = tmp;\n    console.log(\"Markiert: \"+ this.markiert);\n    console.log(\"Entmarkiert: \"+ this.entmarkiert);\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion füllt den Array markiert mit allen markierten Räumen                           *\n  *                                                                                           *\n  ********************************************************************************************/\n  getMarkierung(){\n    if(localStorage.getItem(\"markiert\") != null){\n      this.markiert = localStorage.getItem(\"markiert\").split(\",\");\n    }\n    this.entferneMarkiertAusEntmarkiert();\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion entfernt alle markierten Räume aus den entmarkierten                           *\n  *                                                                                           *\n  ********************************************************************************************/\n  entferneMarkiertAusEntmarkiert(){\n    //tmp ist nun der Array mit den entmarkierten Räumen.\n    var tmp = this.entmarkiert;\n    //die markierten Räume werden durchlaufen\n    for(var i:number = 0; i<this.markiert.length;i++){\n      var index = tmp.indexOf(this.markiert[i]);\n      //Wenn ein markierter Raum in den entmarkierten vorkommt...\n      if(index != -1){\n        //...wird der Raum entfernt\n        for(var j:number = index; j < tmp.length-1;j++){\n          tmp[j] = tmp[j+1];\n        }\n        tmp.pop();\n      }\n    }\n    this.entmarkiert = tmp;\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion entfernt alle entmarkierten Räume aus den markierten                           *\n  *                                                                                           *\n  ********************************************************************************************/\n  entferneEntmarkiertAusMarkiert(raum:string){\n    //tmp ist nun der Array mit den markierten Räumen.\n    var tmp = this.markiert;\n    console.log(\"Markiert vor Entfernen: \"+tmp);\n    if(tmp.length == 1 && tmp[0] == raum){\n      tmp.pop();\n      this.markiert = tmp;\n      console.log(\"Markiert nach Entfernen: \"+tmp);\n      this.entmarkiert.push(raum);\n      console.log(\"Entmarkiert nach Entfernen aus Markiert: \"+tmp);\n      return;\n    }\n    var index = tmp.indexOf(raum);\n    //Wenn ein entmarkierter Raum in den markierten vorkommt...\n    if(index != -1){\n      //...wird der Raum entfernt\n      for(var i:number = index; i < tmp.length-1;i++){\n        tmp[i] = tmp[i+1];\n        tmp.pop();\n      }\n    }\n    this.markiert = tmp;\n    console.log(\"Markiert nach Entfernen: \"+tmp);\n    this.entmarkiert.push(raum);\n    console.log(\"Entmarkiert nach Entfernen aus Markiert: \"+tmp);\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion leitet ruft die Seite home.html auf                                            *\n  *                                                                                           *\n  ********************************************************************************************/\n  BackToCampus(){\n    this.navCtrl.setRoot(HomePage);\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion ruft die Seite search.html auf                                                 *\n  *                                                                                           *\n  ********************************************************************************************/\n  search() {\n    this.navCtrl.push( Search);\n    var page:string = this.navParams.get('item');\n    localStorage.setItem(\"from\",page);\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion zeigt den Raumplan eines Raumes an                                             *\n  *                                                                                           *\n  ********************************************************************************************/\n  getL(raumname:string){\n    console.log(\"GETL\");\n\n    var show2: HTMLElement = document.getElementById('Lehrinnen');\n\n    //Entfernen der Lehrveranstaltungen:\n    var remove = show2.firstChild;\n\n    while(remove) {\n        show2.removeChild(remove);\n        remove = show2.firstChild;\n    }\n\n    //Raumplan-Popup einblenden:\n    var show: HTMLElement = document.getElementById('Lehraussen');\n    show.style.display = \"block\";\n    show2.style.display = \"block\";\n    var span1: HTMLElement = document.getElementById('span1');\n    span1.style.display = \"block\";\n    var span2: HTMLElement = document.getElementById('span2');\n    span2.style.display = \"block\";\n    var button: HTMLElement = document.getElementById('button');\n    button.style.display = \"block\";\n    //Freie Räume ausblenden:\n    var notShow: HTMLElement = document.getElementById('anzeige');\n    notShow.style.display = \"none\";\n    var header: HTMLElement = document.getElementById('header');\n    header.style.display = \"none\";\n\n    show2.appendChild(this.darstellung.getLehrveranstaltungen(raumname));\n\n    localStorage.setItem(\"page\", \"room\");\n    console.log(\"PAGE: \"+localStorage.getItem(\"page\"));\n    this.scrollTop();\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion blendet den Raumplan eines Raumes aus                                          *\n  *                                                                                           *\n  ********************************************************************************************/\n  backClicked(){\n    console.log(\"backklicked\");\n    //Freie Räume einblenden:\n    var show: HTMLElement = document.getElementById('anzeige');\n    show.style.display = \"block\";\n    var header: HTMLElement = document.getElementById('header');\n    header.style.display = \"block\";\n    //Raumplan-Popup ausblenden:\n    var notShow: HTMLElement = document.getElementById('Lehraussen');\n    notShow.style.display = \"none\";\n    var notShow2: HTMLElement = document.getElementById('Lehrinnen');\n    notShow2.style.display = \"none\";\n    var span1: HTMLElement = document.getElementById('span1');\n    span1.style.display = \"none\";\n    var span2: HTMLElement = document.getElementById('span2');\n    span2.style.display = \"none\";\n    var button: HTMLElement = document.getElementById('button');\n    button.style.display = \"none\";\n    var page:string = this.navParams.get('item');\n    if(page.length > 1){\n      page = page.substring(0,1);\n    }\n    localStorage.setItem(\"page\", page);\n    console.log(\"PAGE: \"+page);\n    this.scrollTop();\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion scrollt nach oben                                                              *\n  *                                                                                           *\n  ********************************************************************************************/\n  private scrollTop() {\n    this.content.scrollToTop();\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion erstellt eine Meldung                                                          *\n  *   message -> String mit der Nachricht, die die Meldung enthalten soll                     *\n  *                                                                                           *\n  ********************************************************************************************/\n  toasts(message:string){\n    let toast = this.toastCtrl.create({\n        message:  message,\n        duration: 2000,\n        position: 'middle',\n        cssClass: \"my-toast\"\n    });\n    toast.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/page/page.ts","import { Component, ViewChild } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ToastController, Platform, Nav } from 'ionic-angular';\nimport { GebaudeModel } from '../../model/GebaudeModel';\nimport { Darstellung } from '../../model/Darstellung';\nimport { HomePage } from '../home/home';\nimport { Gebaude } from '../page/page';\n\n/********************************************************************************************\n*                                                                                           *\n*   freeTimeSlot -> Array für die freien Slots eines Raums                                  *\n*   freeUeberschrift -> Array für die Überschrift des Ergebnisses der Raumsuche             *\n*   StundenSlot -> Array mit den Slots                                                      *\n*                                                                                           *\n********************************************************************************************/\nvar freeTimeSlot : number [] = [];\nvar freeUeberschrift:string[] = [];\n\nvar StundenSlot: string [] = [\n  '08:15:00', '10:00:00', '11:45:00', '14:15:00', '16:00:00', '17:45:00', '19:30:00','21:00:00'\n];\n\n\n@IonicPage()\n@Component({\n  selector: 'page-search',\n  templateUrl: 'search.html',\n})\nexport class Search {\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   darstellung -> Objekt vom Typ Darstellung                                               *\n  *   gebaude -> ein Gebäude (wird benötigt für die Anzeige der Zugangsbeschränkung)          *\n  *   freeTimeSlot -> Array für die freien Slots eines Raums                                  *\n  *   freeUeberschrift -> Array für die Überschrift des Ergebnisses der Raumsuche             *\n  *                                                                                           *\n  ********************************************************************************************/\n  private darstellung:Darstellung;\n  private gebaude:GebaudeModel = new GebaudeModel(\"C\");\n  private freeTimeSlot:number [] = freeTimeSlot;\n  private freeUeberschrift:string[] = freeUeberschrift;\n\n\n  @ViewChild(Nav) nav:Nav;\n\n  constructor(public platform: Platform, public toastCtrl: ToastController, public navCtrl: NavController,\n    public navParams: NavParams) {\n\n    platform.registerBackButtonAction(() => {\n      var page:string;\n      if(null != localStorage.getItem(\"from\")){\n        page = localStorage.getItem(\"from\");\n        localStorage.setItem(\"from\", \"Search\");\n        switch(page){\n          case \"Home\":\n          this.nav.setRoot(HomePage);\n          console.log(\"backPressed 1\");return;\n          case \"C\":\n          this.nav.setRoot(Gebaude, {item: \"C\"});\n          console.log(\"backPressed 1\");return;\n          case \"D\":\n          this.nav.setRoot(Gebaude, {item: \"D\"});\n          console.log(\"backPressed 1\");return;\n        }\n      }\n    },1);\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion wird nach dem Laden der View ausgeführt.                                       *\n  *                                                                                           *\n  ********************************************************************************************/\n  ionViewDidLoad(){\n    console.log('ionViewDidLoad SearchPage');\n    this.darstellung = new Darstellung(0);\n    localStorage.setItem(\"page\",\"Search\");\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion ermittelt für einen Raum die freien Slots                                      *\n  *   searchbar -> die Suchmaske                                                              *\n  *                                                                                           *\n  ********************************************************************************************/\n  searchRoom(searchbar){\n    freeTimeSlot = [];\n    var room:string = searchbar.target.value;\n    var raume:string[] = [];\n    var zahl:number = 0;\n    var lieblingsraum = \"Der Raum\";\n\n    var liste:HTMLElement = document.getElementById('liste');\n\n    var fehlerFeld: HTMLElement = document.getElementById('Fehler');\n    fehlerFeld.innerText = \"Raum konnte nicht gefunden werden\";\n    fehlerFeld.style.display = \"none\";\n\n    //Raumliste wird gefüllt:\n    if(room.indexOf(\"C\") == 0){\n      for(var i:number = 0; i < this.darstellung.CampusConfig[0].raumnamen.length; i++){\n        raume.push(this.darstellung.CampusConfig[0].raumnamen[i]);\n        console.log(this.darstellung.CampusConfig[0].raumnamen[i]);\n      }\n    }\n    else if(room.indexOf(\"D\") == 0){\n      for(var j:number = 0; j < this.darstellung.CampusConfig[1].raumnamen.length; j++){\n        raume.push(this.darstellung.CampusConfig[1].raumnamen[j]);\n        console.log(this.darstellung.CampusConfig[1].raumnamen[j]);\n      }\n    }\n\n    //Fehlerbehandlung:\n    if(raume.indexOf(room) == -1){\n      fehlerFeld.style.display = \"block\";\n      liste.style.display = \"none\";\n      return;\n    }\n\n    //Die einzelnen Timeslots werden überprüft:\n    for(var y:number = 0; y < StundenSlot.length; y++){\n      console.log(StundenSlot[y]);\n      if(this.darstellung.parseToRaum(room).isFree(StundenSlot[y],this.darstellung.giveWochentag())){\n        freeTimeSlot.push(y);\n       }\n      else{\n        freeTimeSlot.push(99);\n        zahl++;\n      }\n    }\n\n    //Zugangsbeschränkung?:\n    var zugang:string[] = this.gebaude.zugangsberechtigung;\n    console.log(zugang);\n    if(zugang.indexOf(room) != -1){\n      this.toasts(\"Für den Raum \"+room+\" brauchst du eine Zugangsberechtigung!\");\n    }\n\n    console.log(freeTimeSlot);\n    liste.style.display = \"block\";\n\n    //Markiert?\n    var markiert:string[] = [];\n    if(localStorage.getItem(\"markiert\") != null){\n      markiert = localStorage.getItem(\"markiert\").split(\",\");\n    }\n    if(markiert.indexOf(room) != -1){\n      lieblingsraum = \"Dein Lieblingsraum \";\n    }\n\n    //Überschrift anpassen:\n    if(zahl == StundenSlot.length){\n      freeUeberschrift[0] = lieblingsraum+\" \\\"\"+room+\"\\\" ist heute leider nicht frei!\";\n    }else{\n      freeUeberschrift[0] = lieblingsraum+\" \\\"\"+room+\"\\\" ist heute zu folgenden Uhrzeiten frei:\";\n    }\n\n    this.navCtrl.setRoot(this.navCtrl.getActive().component);\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion erstellt eine Meldung                                                          *\n  *   message -> String mit der Nachricht, die die Meldung enthalten soll                     *\n  *                                                                                           *\n  ********************************************************************************************/\n  toasts(message:string){\n    let toast = this.toastCtrl.create({\n        message:  message,\n        duration: 2000,\n        position: 'middle',\n        cssClass: \"my-toast\"\n    });\n    toast.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/search/search.ts","import { RaumModel } from './RaumModel.1';\nimport ICAL from \"ical.js\";\nimport { Veranstaltung } from './Veranstaltung';\nimport { GebaudeModel } from './GebaudeModel';\nimport { CampusModel } from './CampusModel';\n\n\nexport class Darstellung {\n  /********************************************************************************************\n  *                                                                                           *\n  *   Enthält alle Gebäude und Räume in den Gebäuden                                          *\n  *                                                                                           *\n  ********************************************************************************************/\n  CampusConfig = [\n\n    {\n      gebaudename: \"C\",\n      raumnamen: [\n        \"C001\",\n        \"C007\",\n        \"C035\",\n        \"C037\",\n        \"C113\",\n        \"C213\",\n        \"C237\",\n        \"C305\",\n        \"C313\",\n        \"C361\",\n        \"C375\",\n        \"C377\",\n        \"C405\",\n        \"C407\",\n        \"C413\",\n      ]\n\n    },\n\n    {\n      gebaudename: \"D\",\n      raumnamen: [\n        \"D01\",\n        \"D02\",\n        \"D12\",\n        \"D13\",\n        \"D14\",\n        \"D15\",\n        \"D17\",\n        \"D18\",\n      ]\n\n    }\n\n  ];\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   GebaudeAuswahl -> Nummer des Gebäudes (0 -> C-Gebäude, 1 -> D-Gebäude)                  *\n  *   freeRooms -> Array, in den freie Räume mit Uhrzeit geschrieben werden                   *\n  *   zugang -> Array, in den alle Räume mit Zugangsbeschränkung geschrieben werden           *\n  *                                                                                           *\n  ********************************************************************************************/\n  GebaudeAuswahl:number;\n  freeRooms:string[] = [];\n  zugang:string[] = [];\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Konstruktor setzt das Gebäude.                                                             *\n  *                                                                                           *\n  *   wahl -> Nummer des Gebäude (0 -> C-Gebäude, 1 -> D-Gebäude)                             *\n  *                                                                                           *\n  ********************************************************************************************/\n  constructor(wahl:number){\n    this.GebaudeAuswahl = wahl;\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion gibt den aktuellen Wochentag zurück                                            *\n  *                                                                                           *\n  *   RETURN-Wert: Der aktuelle Wochentag als String                                          *\n  *                                                                                           *\n  ********************************************************************************************/\n  giveWochentag(){\n    var jetzt = new Date();\n    switch(jetzt.getDay()){\n      case 1: return \"Montag\";\n      case 2: return \"Dienstag\";\n      case 3: return \"Mittwoch\";\n      case 4: return \"Donnerstag\";\n      case 5: return \"Freitag\";\n      case 6: return \"Samstag\";\n      case 0: return \"Sonntag\";\n      default: break;\n      }\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion parst ein Datum aus dem Raumplan (Format: HH:MM:SSTJahr-Monat-Tag)             *\n  *   und ermittelt dessen Wochentag.                                                         *\n  *                                                                                           *\n  *   text -> Datum                                                                           *\n  *                                                                                           *\n  *   RETURN-Wert: Der Wochentag eines Datums                                                 *\n  *                                                                                           *\n  ********************************************************************************************/\n  parseDateToWochentag(text:string) {\n    var datum:any = text.split(\"T\");\n    datum.pop();\n    datum = datum[0].split(\"-\");\n    var datum2:any = new Date(datum[0],datum[1]-1,datum[2]);\n    var tag:any = datum2.getDay();\n    var wochentag:any = ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'];\n    return wochentag[tag];\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion parst ein Datum aus dem Raumplan (Format: HH:MM:SSTJahr-Monat-Tag)             *\n  *   und ermittelt dessen Uhrzeit.                                                           *\n  *                                                                                           *\n  *   text -> Uhrzeit, die geparst werden soll                                                *\n  *                                                                                           *\n  *   RETURN-Wert: Die Uhrzeit eines Datums                                                   *\n  *                                                                                           *\n  ********************************************************************************************/\n  parseUhrZeit(text:string) {\n    var datum:any = text.split(\"T\");\n    var tmp:any = datum[1];\n    return tmp;\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion fügt in die Gebäude einen Raum hinzu                                           *\n  *                                                                                           *\n  *   raumnamen -> Array mit Namen der Räume                                                  *\n  *   name -> Name des Gebäudes                                                               *\n  *                                                                                           *\n  *   RETURN-Wert: Das erstellte Gebäude                                                      *\n  *                                                                                           *\n  ********************************************************************************************/\n  parseGebaude(raumnamen:string[], name:string){\n    var gebaude = new GebaudeModel(name);\n    raumnamen.forEach(raumname=> {\n      var raum = this.parseToRaum(raumname);\n      gebaude.addRaum(raum);\n\n    });\n    return gebaude;\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion parst die Raumpläne und fügt Veranstaltungen einem Raum hinzu.                 *\n  *                                                                                           *\n  *   raumname -> Name des Raums für den der Raumplan ermittelt werden soll                   *\n  *                                                                                           *\n  *   RETURN-Wert: Der erstellte Raum                                                         *\n  *                                                                                           *\n  ********************************************************************************************/\n  parseToRaum(raumname: string){\n    var raum = new RaumModel(raumname);\n    var ics = raum.getICS(localStorage.getItem(raumname));\n    ics.pop();\n\n    var jcalData = ICAL.parse(ics.join(\"\\r\\n\"));\n    var vcalendar = new ICAL.Component(jcalData);\n    var vevent = vcalendar.getAllSubcomponents('vevent');\n\n    for(var i:number = 0; i < vevent.length; i++){\n      var start = vevent[i].getFirstPropertyValue('dtstart');\n      var end = vevent[i].getFirstPropertyValue('dtend');\n      var startZeit = this.parseUhrZeit(start.toString());\n      var endZeit = this.parseUhrZeit(end.toString());\n      var name = vevent[i].getFirstPropertyValue('description');\n      var wochentag = this.parseDateToWochentag(start.toString());\n\n      this.neueVeranstaltung(name, wochentag, startZeit, endZeit, raum);\n\n      this.laengereVeranstaltungen(name, wochentag, startZeit, endZeit, raum);\n    }\n    return raum;\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion erstellt eine neue Veranstaltung.                                              *\n  *                                                                                           *\n  *   name -> Name der Veranstaltung                                                          *\n  *   wochentag -> Wochtag der Veranstaltung                                                  *\n  *   startZeit -> Beginn der Veranstaltung                                                   *\n  *   endZeit -> Ende der Veranstaltung                                                       *\n  *   raum -> Raum, zu dem die Veranstaltung hinzugefügt werden soll                          *\n  *                                                                                           *\n  ********************************************************************************************/\n  neueVeranstaltung(name:string, wochentag:string, startZeit:string, endZeit:string, raum:RaumModel){\n    var veranstaltung = new Veranstaltung(name, wochentag, startZeit, endZeit);\n    raum.addVeranstaltung(veranstaltung);\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion erstellt eine neue Veranstaltung.                                              *\n  *                                                                                           *\n  *   name -> Name der Veranstaltung                                                          *\n  *   wochentag -> Wochtag der Veranstaltung                                                  *\n  *   startZeit -> Beginn der Veranstaltung                                                   *\n  *   endZeit -> Ende der Veranstaltung                                                       *\n  *   raum -> Raum, in der die Veranstaltung stattfindet                                      *\n  *                                                                                           *\n  ********************************************************************************************/\n  laengereVeranstaltungen(name:string, wochentag:string, startZeit:string, endZeit:string, raum:RaumModel){\n    switch(startZeit){\n      case \"08:15:00\":\n      if(endZeit == \"11:30:00\") {\n        this.neueVeranstaltung(name, wochentag, \"10:00:00\", endZeit, raum);\n      }else if(endZeit == \"13:15:00\"){\n        this.neueVeranstaltung(name, wochentag, \"10:00:00\", endZeit, raum);\n        this.neueVeranstaltung(name, wochentag, \"11:45:00\", endZeit, raum);\n      }break;\n\n      case \"10:00:00\":\n      if(endZeit == \"13:15:00\") {\n        this.neueVeranstaltung(name, wochentag, \"11:45:00\", endZeit, raum);\n      }else if(endZeit == \"15:45:00\") {\n        this.neueVeranstaltung(name, wochentag, \"11:45:00\", endZeit, raum);\n        this.neueVeranstaltung(name, wochentag, \"14:15:00\", endZeit, raum);\n      }break;\n\n      case \"11:45:00\":\n      if(endZeit == \"15:45:00\") {\n        this.neueVeranstaltung(name, wochentag, \"14:15:00\", endZeit, raum);\n      }else if(endZeit == \"17:30:00\") {\n        this.neueVeranstaltung(name, wochentag, \"14:15:00\", endZeit, raum);\n        this.neueVeranstaltung(name, wochentag, \"16:00:00\", endZeit, raum);\n      }break;\n\n      case \"14:15:00\":\n      if(endZeit == \"17:30:00\") {\n        this.neueVeranstaltung(name, wochentag, \"16:00:00\", endZeit, raum);\n      }else if(endZeit == \"19:15:00\"){\n        this.neueVeranstaltung(name, wochentag, \"16:00:00\", endZeit, raum);\n        this.neueVeranstaltung(name, wochentag, \"17:45:00\", endZeit, raum);\n      }break;\n\n      case \"16:00:00\":\n      if(endZeit == \"19:15:00\") {\n        this.neueVeranstaltung(name, wochentag, \"17:45:00\", endZeit, raum);\n      }else if(endZeit == \"21:00:00\"){\n        this.neueVeranstaltung(name, wochentag, \"17:45:00\", endZeit, raum);\n        this.neueVeranstaltung(name, wochentag, \"19:30:00\", endZeit, raum);\n      }break;\n\n      case \"17:45:00\":\n      if(endZeit == \"21:00:00\") {\n        this.neueVeranstaltung(name, wochentag, \"19:30:00\", endZeit, raum);\n      }\n    }\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion erstellt den Campus und füllt den Array freeRooms mit den freien Räumen.       *\n  *                                                                                           *\n  *   RETURN-Wert: Der erstellte Campus                                                       *\n  *                                                                                           *\n  ********************************************************************************************/\n  parseToCampus(){\n    var campus = new CampusModel(\"HSRM\");\n    for(let gebaudeConfig of this.CampusConfig){\n      var gebaude = this.parseGebaude(gebaudeConfig.raumnamen, gebaudeConfig.gebaudename)\n      campus.addGebaude(gebaude);\n    }\n    for(var i: number = 0; i < campus.gebaude[this.GebaudeAuswahl].getFreeRooms().length; i++){\n      this.freeRooms.push(campus.gebaude[this.GebaudeAuswahl].getFreeRooms()[i]);\n    }\n    for(var j:number = 0;j<campus.gebaude[this.GebaudeAuswahl].zugangsberechtigung.length;j++){\n      this.zugang.push(campus.gebaude[this.GebaudeAuswahl].zugangsberechtigung[j]);\n    }\n    return campus;\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion entfernt die Sekunden in der Uhrzeit                                           *\n  *                                                                                           *\n  *   zeit -> Uhrzeit, die bearbeitet werden soll                                             *\n  *                                                                                           *\n  *   RETURN-Wert: Die geänderte Uhrzeit                                                      *\n  *                                                                                           *\n  ********************************************************************************************/\n  changeZeit(zeit:string){\n    switch(zeit){\n      case \"08:15:00\": return \"08:15\";\n      case \"09:45:00\": return \"09:45\";\n      case \"10:00:00\": return \"10:00\";\n      case \"11:30:00\": return \"11:30\";\n      case \"11:45:00\": return \"11:45\";\n      case \"13:15:00\": return \"13:15\";\n      case \"14:15:00\": return \"14:15\";\n      case \"15:45:00\": return \"15:45\";\n      case \"16:00:00\": return \"16:00\";\n      case \"17:30:00\": return \"17:30\";\n      case \"17:45:00\": return \"17:45\";\n      case \"19:15:00\": return \"19:15\";\n      case \"19:30:00\": return \"19:30\";\n      case \"21:00:00\": return \"21:00\";\n    }\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion erstellt ein HTML-Element.                                                     *\n  *                                                                                           *\n  *   text -> Text der in das HTML-Element gefüllt werden soll.                               *\n  *   tag -> Tag des HTML-Elements                                                            *\n  *                                                                                           *\n  *   RETURN-Wert: Das erstellte HTML-Element                                                 *\n  *                                                                                           *\n  ********************************************************************************************/\n  erstelleElement(text:string, tag:string){\n    var element: HTMLElement = document.createElement(tag);\n    var texte:string[] = text.split(\",\");\n\n    for(var i:number = 0;i<texte.length;i++){\n      var breaks:HTMLElement = document.createElement(\"div\");\n      var text2  = document.createTextNode(texte[i]);\n      breaks.appendChild(text2);\n      element.appendChild(breaks);\n    }\n    if(texte.length>1){\n      element.style.borderRadius = \"6px\";\n      element.style.width = \"100%\";\n      element.style.padding = \"3px\";\n    }\n    return element;\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion erstellt eine optische Darstellung                                             *\n  *   der in getLehrveranstaltungen() ermittelten                                             *\n  *   Lehrveranstaltungen für einen Raum                                                      *\n  *                                                                                           *\n  *   lehrveranstaltungen -> ein Array mit den Lehrveranstaltungen, Uhrzeiten und Wochentagen *\n  *   raumname -> Name des Raums für den der Raumplan dargestellt werden soll                 *\n  *                                                                                           *\n  *   Aufbau des DOM-Trees:                                                                   *\n  *   <show2> //in page.ts                                                                    *\n  *     <inhalt>                              #                                               *\n  *       <ueberschrift>                        #                                             *\n  *       ...Kann mehrere Ueberschriften         # werden in dieser Funktion erstellt         *\n  *       <veranstaltung>                        # und dann zurückgegeben                     *\n  *       ...und Veranstaltungen enthalten      #                                             *\n  *     </inhalt>                             #                                               *\n  *   </show2>                                                                                *\n  *                                                                                           *\n  *   RETURN-Wert: Der erstellte Raumplan                                                     *\n  *                                                                                           *\n  ********************************************************************************************/\n  zeigeLehrveranstaltungen(lehrveranstaltungen:string[], raumname:string){\n    var inhalt: HTMLElement = document.createElement(\"div\");\n    var ueberschrift: HTMLElement = this.erstelleElement(raumname,\"h3\");\n    inhalt.appendChild(ueberschrift);\n\n    var veranstaltung: HTMLElement;\n    var lehrvtmp:string = \"\";\n    if(lehrveranstaltungen.length == 0){\n      veranstaltung = this.erstelleElement(\"In diesem Raum finden keine Veranstaltungen statt.,Studentischer Arbeitsraum.\", \"p\");\n      veranstaltung.style.backgroundColor = \"rgba(140, 140, 140, 0.3)\";\n      veranstaltung.style.border = \"2px solid rgb(140, 140, 140)\";\n      inhalt.appendChild(veranstaltung);\n      return inhalt;\n    }\n    for(var j:number = 0;j < lehrveranstaltungen.length;j++){\n      //Wenn im Array ein Wochentag steht, dann wird eine Wochentagsüberschrift erstellt:\n      switch(lehrveranstaltungen[j]){\n        case \"Montag\":\n          this.erstelleUeberschrift(\"Montag\", inhalt);continue;\n        case \"Dienstag\":\n          this.erstelleUeberschrift(\"Dienstag\", inhalt);continue;\n        case \"Mittwoch\":\n          this.erstelleUeberschrift(\"Mittwoch\", inhalt);continue;\n        case \"Donnerstag\":\n          this.erstelleUeberschrift(\"Donnerstag\", inhalt);continue;\n        case \"Freitag\":\n          this.erstelleUeberschrift(\"Freitag\", inhalt);continue;\n        case \"Samstag\":\n          this.erstelleUeberschrift(\"Samstag\", inhalt);continue;\n        case \"Sonntag\":\n          this.erstelleUeberschrift(\"Sonntag\", inhalt);continue;\n      }\n      if(lehrveranstaltungen[j] != lehrvtmp){\n        //Ermitteln welcher Veranstaltungstyp es ist:\n        var vl = lehrveranstaltungen[j].indexOf(\"Vorlesung\");\n        var se = lehrveranstaltungen[j].indexOf(\"Seminar\");\n        var pr = lehrveranstaltungen[j].indexOf(\"Praktikum\");\n        var ue = lehrveranstaltungen[j].indexOf(\"Übung\");\n\n        veranstaltung = this.erstelleElement(\"\"+lehrveranstaltungen[j]+\",\"+lehrveranstaltungen[j+1],\"p\");\n        if(vl != -1){\n          //Farben für Vorlesungen festlegen:\n          veranstaltung.style.backgroundColor = \"rgba(74, 106, 255, 0.5)\";\n          veranstaltung.style.border = \"2px solid rgb(74, 106, 255)\";\n        }else if(se != -1){\n          //Farben für Seminar festlegen:\n          veranstaltung = this.erstelleElement(\"\"+lehrveranstaltungen[j]+\",\"+lehrveranstaltungen[j+1],\"p\");\n          veranstaltung.style.backgroundColor = \"rgba(26, 123, 81, 0.5)\";\n          veranstaltung.style.border = \"2px solid rgb(26, 123, 81)\";\n        }else if(pr != -1){\n          //Farben für Praktikum festlegen:\n          veranstaltung = this.erstelleElement(\"\"+lehrveranstaltungen[j]+\",\"+lehrveranstaltungen[j+1],\"p\");\n          veranstaltung.style.backgroundColor = \"rgba(255, 146, 63, 0.5)\";\n          veranstaltung.style.border = \"2px solid rgb(255, 146, 63)\";\n        }else if(ue != -1){\n          //Farben für Uebung festlegen:\n          veranstaltung = this.erstelleElement(\"\"+lehrveranstaltungen[j]+\",\"+lehrveranstaltungen[j+1],\"p\");\n          veranstaltung.style.backgroundColor = \"rgba(44, 250, 40, 0.4)\";\n          veranstaltung.style.border = \"2px solid rgb(44, 250, 40)\";\n        }else {\n          //Farben für Sonstige Veranstaltung festlegen:\n          veranstaltung = this.erstelleElement(\"\"+lehrveranstaltungen[j]+\",\"+lehrveranstaltungen[j+1],\"p\");\n          veranstaltung.style.backgroundColor = \"rgba(140, 140, 140, 0.3)\";\n          veranstaltung.style.border = \"2px solid rgb(140, 140, 140)\";\n        }\n        inhalt.appendChild(veranstaltung);\n        lehrvtmp = lehrveranstaltungen[j+1];\n      }\n    }\n    return inhalt;\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion erstellt eine Wochentags-Überschrift für den Raumplan.                         *\n  *                                                                                           *\n  *   wochentag -> Name des Wochentags                                                        *\n  *   inhalt -> HTML-Element, zu dem die Überschrift hinzugefügt wird                         *\n  *                                                                                           *\n  ********************************************************************************************/\n  erstelleUeberschrift(wochentag:string,inhalt:HTMLElement){\n    var ueberschrift = this.erstelleElement(wochentag, \"h5\");\n    inhalt.appendChild(ueberschrift);\n  }\n\n  /********************************************************************************************\n  *                                                                                           *\n  *   Funktion ermittelt Lehrveranstaltungen für einen Raum                                   *\n  *                                                                                           *\n  *   raumname -> Name des Raums für den der Raumplan ermittelt werden soll                   *\n  *                                                                                           *\n  *   RETURN-Wert: Der erstellte Raumplan                                                     *\n  *                                                                                           *\n  ********************************************************************************************/\n  getLehrveranstaltungen(raumname:string){\n    var LehrveranstaltungoffreeRooms:string[] = [];\n    var Wochentag:string = \"\";\n    var uhrzeit:string;\n    var uhrzeittmp:string = \"\";\n    var name:string;\n    var enduhrzeit:string;\n    var enduhrzeittmp:string = \"\";\n\n    var raum = this.parseToRaum(raumname);\n\n    for(var i:number = 0; i< raum.veranstaltungen.length; i++){\n      name = raum.veranstaltungen[i].name;\n\n      //Der Wochentag wird ermittelt und in den Array geschrieben\n      //Damit der Wochentag nur einmal vorkommt:\n      if(raum.veranstaltungen[i].wochentag != Wochentag){\n        Wochentag = raum.veranstaltungen[i].wochentag;\n        LehrveranstaltungoffreeRooms.push(Wochentag);\n        enduhrzeittmp = \"\";\n        uhrzeittmp = \"\";\n      }\n\n      uhrzeit = this.changeZeit(raum.veranstaltungen[i].uhrzeit);\n      enduhrzeit = this.changeZeit(raum.veranstaltungen[i].enduhrzeit);\n      //Die Uhrzeit wird überprüft, damit parallele Veranstaltungen nicht vorkommen:\n      if(uhrzeit != uhrzeittmp && enduhrzeit != enduhrzeittmp){\n        name = name.replace(\"\\\\\",\"\");\n        name = name.replace(\",\",\"\");\n        LehrveranstaltungoffreeRooms.push(name);\n        if(uhrzeit === undefined){\n          LehrveranstaltungoffreeRooms.push(\"Keine Uhrzeit vorhanden!\");\n        }else {\n          LehrveranstaltungoffreeRooms.push(uhrzeit+\" bis \"+enduhrzeit);\n        }\n        uhrzeittmp = uhrzeit;\n        enduhrzeittmp = enduhrzeit;\n      }\n    }\n    return this.zeigeLehrveranstaltungen(LehrveranstaltungoffreeRooms, raumname);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/Darstellung.ts"],"sourceRoot":""}