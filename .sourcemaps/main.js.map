{"version":3,"sources":["../../src/pages/login/login.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/model/GebaudeModel.ts","../../src/model/Darstellung.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/model/RaumModel.1.ts","../../src/model/Veranstaltung.ts","../../src/model/CampusModel.ts","../../src/app/app.component.ts","../../src/pages/search/search.ts","../../src/pages/home/home.ts","../../src/pages/page/page.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { NavController, AlertController, LoadingController, MenuController } from 'ionic-angular';\r\nimport { HomePage } from '../home/home';\r\nimport { Http, Headers } from '@angular/http';\r\n\r\n/********************************************************************************************\r\n*                                                                                           *\r\n*   Funktion filtert aus dem übergebenen String das Token für die                           *\r\n*   Anmeldung beim Server.                                                                  *\r\n*   text -> String mit einem Text, in der das Token steckt                                  *\r\n*                                                                                           *\r\n********************************************************************************************/\r\nfunction get_Token(text:string) {\r\n\treturn text.substring(text.indexOf(\"csrf-token\")+23, text.indexOf(\"csrf-token\")+111);\r\n}\r\n\r\n/********************************************************************************************\r\n*                                                                                           *\r\n*   Funktion filtert aus dem übergebenen String das Semester für die                        *\r\n*   Anmeldung beim Server.                                                                  *\r\n*   text -> String mit einem Text, in der das Semester steckt                               *\r\n*                                                                                           *\r\n********************************************************************************************/\r\nfunction get_Semester(text:string) {\r\n\treturn text.substring(text.indexOf(\"option selected\")+37, text.indexOf(\"option selected\")+46);\r\n}\r\n\r\n/********************************************************************************************\r\n*                                                                                           *\r\n*   Funktion filtert aus dem übergebenen String einen bestimmten String heraus,             *\r\n*   um festzustellen, ob die Anmeldung erfolgreich war.                                     *\r\n*   text -> String mit einem Text, in dem die Antwort des Servers steckt                    *\r\n*                                                                                           *\r\n********************************************************************************************/\r\nfunction get_Header(text:string) {\r\n\treturn text.indexOf(\"Ihre Anmeldung war leider nicht erfolgreich, bitte überprüfen Sie ihre Login-Daten\");\r\n}\r\n\r\n/********************************************************************************************\r\n*                                                                                           *\r\n*   Funktion gibt eine Fehlermeldung aus.                                                   *\r\n*   meldung1 -> String der ersten Fehlermeldung                                             *\r\n*   meldung2 -> String der zweiten Fehlermeldung                                             *\r\n*                                                                                           *\r\n********************************************************************************************/\r\nfunction fehler(meldung1:string, meldung2:string){\r\n\tvar fehlerFeld: HTMLElement = document.getElementById('Fehler');\r\n\tfehlerFeld.innerText = meldung1;\r\n\tfehlerFeld.style.display = \"block\";\r\n\tvar fehlerFeldZwei: HTMLElement = document.getElementById('Fehler2');\r\n\tfehlerFeldZwei.innerText = meldung2;\r\n\tfehlerFeldZwei.style.display = \"block\";\r\n\tvar ladeicon: HTMLElement = document.getElementById('laden');\r\n\tladeicon.style.display =\"none\";\r\n}\r\n\r\n/********************************************************************************************\r\n*                                                                                           *\r\n*   Funktion filtert aus dem übergebenen String den Quelltext der ics-Dateien heraus        *\r\n*   text -> String mit der Antwort des Servers, in der der Quelltext steckt                 *\r\n*                                                                                           *\r\n********************************************************************************************/\r\nfunction get_Plan(text:string) {\r\n\tif(-1 == text.indexOf(\"DOCTYPE\")){\r\n\t\treturn text.substring(text.indexOf(\"_body\")+9, text.indexOf(\"status\")-6);\r\n\t}\r\n\t//Sollte im String \"DOCTYPE\" stehen, dann ist das nicht der Inhalt der ics-Datei:\r\n\tfehler(\"Fehler beim Herunterladen der Daten. Bitte versuche es erneut\", \"Fehler beim Herunterladen der Daten. Bitte App neu starten\");\r\n\treturn -1;\r\n}\r\n\r\n/********************************************************************************************\r\n*                                                                                           *\r\n*   Funktion lädt die ics-Dateien herunter und speichert sie im localStorage                *\r\n*   element -> der aus der Klasse übergebene http-Parameter                                 *\r\n*   options -> der aus der loginFunction übergebenen Header für die get-Anfragen            *\r\n*   stelle -> Zahl, die die Anzahl der Downloads enthält (Beginn bei 0 -> 1. Download)      *\r\n*   loader -> Loader                                                                        *\r\n*                                                                                           *\r\n********************************************************************************************/\r\nfunction download(element:any, options:any, stelle:number, loader:any){\r\n\t//Arrays mit der id des Raumplans und den Räumen:\r\n\tvar id:string[] = [\"1001264429\",\"1001264431\",\"454131924\",\"454131925\",\"454131926\",\"454131927\",\"454131928\",\"454131930\",\"454131931\",\r\n\t\"967118069\",\"967118075\",\"967321020\",\"967321022\",\"975705394\",\"984225074\",\"984360376\",\"992677104\",\"992744751\",\"1001264469\",\"1001264470\",\"1001264471\",\"1001196781\",\"1001196783\",\"1001264428\"];\r\n\tvar raum:string[] = [\"D01\",\"D02\",\"D11\",\"D12\",\"D13\",\"D14\",\"D15\",\"D17\",\"D18\",\r\n\t\"C001\",\"C007\",\"C035\",\"C037\",\"C113\",\"C213\",\"C237\",\"C305\",\"C313\",\"C361\",\"C375\",\"C377\",\"C405\",\"C407\",\"C413\"];\r\n\r\n\t//Solange nicht alle Raumpläne heruntergeladen wurden:\r\n\tif(stelle < id.length){\r\n\t\t//Raumplan über id herunterladen\r\n\t\telement.http.get('https://aor.cs.hs-rm.de/rooms/'+id[stelle]+'/plans.ics', options).subscribe(\r\n\t\t\tresult => {\r\n\t\t\t\telement.x = JSON.stringify(result, null, 2);\r\n\t\t\t\telement.x = get_Plan(element.x);\r\n\t\t\t\tif(-1 == element.x){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t//Raumplan abspeichern\r\n\t\t\t\tlocalStorage.setItem(raum[stelle], element.x);\r\n\t\t\t\t//nächsten Raumplan:\r\n\t\t\t\tdownload(element,options,stelle+1,loader);\r\n\t\t\t}, error => {\r\n\t\t\t\tconsole.log(\"Error: \"+ JSON.stringify(error, null, 2));\r\n\t\t\t});\r\n\t}else{\r\n\t\tloader.dismiss();\r\n\t\tlocalStorage.setItem(\"benutzer\", element.benutzername);\r\n\t\tlocalStorage.setItem(\"passwort\", element.password);\r\n\t\telement.navCtrl.setRoot(HomePage);\r\n\t}\r\n}\r\n\r\n/********************************************************************************************\r\n*                                                                                           *\r\n*   Funktion führt den Login durch.                                                         *\r\n*   element -> der aus der Klasse übergebene http-Parameter                                 *\r\n*                                                                                           *\r\n********************************************************************************************/\r\nfunction loginFunction(element:any) {\r\n\t//Header für die Anmeldung\r\n\tlet options = {\r\n\t\theaders: new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' }),\r\n\t\twithCredentials: true\r\n\t};\r\n\r\n\t//GET-Anfrage um den Content der Seite zu bekommen, damit das Token gefunden werden kann\r\n\telement.http.get('https://aor.cs.hs-rm.de/login', options).subscribe(\r\n\t\tresult => {\r\n\t\t\telement.x = JSON.stringify(result, null, 2);\r\n\t\t\telement.token = get_Token(element.x);\r\n\t\t\telement.semester = get_Semester(element.x);\r\n\t\t\telement.token = encodeURIComponent(element.token);\r\n\r\n\t\t\t//Der Body für die Anmeldung:\r\n\t\t\tvar body = 'utf8=%E2%9C%93' +\r\n\t\t\t'&authenticity_token=' + element.token +\r\n\t\t\t'&login[account]=' + element.benutzername +\r\n\t\t\t'&login[password]=' + element.password +\r\n\t\t\t'&login[term_id]=' + element.semester +\r\n\t\t\t'&commit=Anmeldung';\r\n\r\n\t\t\telement.http.post('https://aor.cs.hs-rm.de/login', body, options).subscribe(\r\n\t\t\t\tresult => {\r\n\t\t\t\t\tif(-1 == get_Header(JSON.stringify(result, null, 2))){\r\n\r\n\t\t\t\t\t\tlet loader = element.loadingCtrl.create({\r\n\t\t\t\t\t\t\tcontent: \"Login war erfolgreich. Daten werden geladen...\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tloader.present();\r\n\t\t\t\t\t\tvar fehlerFeldZwei: HTMLElement = document.getElementById('Fehler2');\r\n\t\t\t\t\t\tfehlerFeldZwei.innerText = \"Login war erfolgreich.\";\r\n\t\t\t\t\t\tfehlerFeldZwei.style.display = \"block\";\r\n\r\n\t\t\t\t\t\t//Wenn die Anmeldung erfolgreich war, werden die Raumpläne heruntergeladen:\r\n\t\t\t\t\t\tdownload(element,options,0,loader);\r\n\t\t\t\t\t} else{\r\n\t\t\t\t\t\tfehler(\"Benutzername oder Passwort falsch.\", \"Login fehlgeschlagen. Bitte starte die App erneut.\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, error => {\r\n\t\t\t\t\t//console.log(\"Error: POST: \"+ JSON.stringify(error, null, 2));;\r\n\t\t\t\t\tfehler(\"Benutzername oder Passwort falsch.\", \"Login fehlgeschlagen. Bitte starte die App erneut.\");\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t});//post\r\n\t\t}, error => {\r\n\t\t\tconsole.log(\"Error: \"+ JSON.stringify(error, null, 2));\r\n\t\t});//get\r\n}\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n})\r\nexport class LoginPage {\r\n\r\n\t/********************************************************************************************\r\n\t*                                                                                           *\r\n\t*   showLogin -> bool ob Login angezeigt wird                                               *\r\n\t*   benutzername -> String mit dem Benutzernamen im Formular                                *\r\n\t*   password -> String mit dem Passwort im Formular                                         *\r\n\t*   token -> String mit dem zu ermittelnden Token                                           *\r\n\t*   x -> String für die Antwort des Servers                                                 *\r\n\t*   semester -> String für das zu ermittelnde Semester                                      *\r\n\t*                                                                                           *\r\n\t********************************************************************************************/\r\n  showLogin:boolean = true;\r\n  benutzername:string = '';\r\n  password:string = '';\r\n  token:string ='';\r\n  x:string = '';\r\n\tsemester:string='';\r\n\r\n\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t//   Wichtiger Hinweis!!!!!!                                                                                                                                        //\r\n\t//   Diesen Parameter auf jeden Fall im Konstruktor stehen lassen, auch wenn der Compiler warnings ausgibt.                                                         //\r\n\t//   http wird an die Funktion loginFunction mit dem Parameter \"this\" übergeben!                                                                                    //\r\n\t//    |________________________________________________________________________________________________________________________________________________________     //\r\n\t//                                                                                                                                                            |     //\r\n  constructor(public navCtrl: NavController, public menuCtrl: MenuController, public alertCtrl: AlertController, public loadingCtrl:LoadingController, private http: Http) {}\r\n\r\n  ionViewDidLoad() {\r\n    console.log('Dat is die LoginPage');\r\n\t\t//Hier überprüfen:\r\n\t\t//-ob schon Benutzerdaten vorhanden sind.\r\n\t\t//Wenn ja, dann Login-formular ausblenden und Login durchführen.\r\n\t\tvar FehlerFeld: HTMLElement = document.getElementById('Fehler');\r\n\t\tFehlerFeld.style.display = \"none\";\r\n\r\n\t\tvar ladeicon: HTMLElement = document.getElementById('laden');\r\n\t\tladeicon.style.display =\"none\";\r\n\r\n\t\t//Nachfolgenden Abschnitt einkommentieren um automatisch angemeldet zu werden:\r\n\t\tif(localStorage.getItem(\"benutzer\") != null && localStorage.getItem(\"passwort\") != null){\r\n\t\t\tthis.benutzername = localStorage.getItem(\"benutzer\");\r\n\t\t\tthis.password = localStorage.getItem(\"passwort\");\r\n\r\n\t\t\t//Das Loginformular wird ausgeblendet:\r\n\t\t\tvar formular: HTMLElement = document.getElementById('content');\r\n\t\t\tformular.style.display = \"none\";\r\n\t\t\tvar header: HTMLElement = document.getElementById('header');\r\n\t\t\theader.style.display = \"none\";\r\n\t\t\t//Der Screen für den automatischen Login wird eingeblendet:\r\n\t\t\tvar login: HTMLElement = document.getElementById('login');\r\n\t\t\tlogin.style.display = \"block\";\r\n\t\t\tloginFunction(this);\r\n\t\t\t//Falls man beim Starten der App nicht den Login machen möchte einfach die loginFunction auskommentieren und diese Zeile einkommentieren:\r\n\t\t\t//this.navCtrl.setRoot(HomePage);\r\n\r\n\t\t}\r\n  }\r\n\r\n\t/********************************************************************************************\r\n\t*                                                                                           *\r\n\t*   Funktion blendet das Fehlerfeld des Loginformulars aus.                                 *\r\n\t*                                                                                           *\r\n\t********************************************************************************************/\r\n  clicked(){\r\n    var fehlerFeld: HTMLElement = document.getElementById('Fehler');\r\n    fehlerFeld.style.display = \"none\";\r\n  }\r\n\r\n\t/********************************************************************************************\r\n\t*                                                                                           *\r\n\t*   Funktion führt den Login nach dem korrekten Ausfüllen des Formulars durch.              *\r\n\t*                                                                                           *\r\n\t********************************************************************************************/\r\n  doLogin() {\r\n    if(this.showLogin) {\r\n      console.log('login im gange');\r\n      if(this.benutzername.length != 8 || this.password === '') {\r\n        var fehlerFeld: HTMLElement = document.getElementById('Fehler');\r\n        fehlerFeld.innerText = \"Benutzername oder Passwort falsch.\";\r\n        fehlerFeld.style.display = \"block\";\r\n        return;\r\n      }\r\n\r\n\t\t\tloginFunction(this);\r\n\t\t\tvar ladeicon: HTMLElement = document.getElementById('laden');\r\n\t\t\tladeicon.style.display =\"block\";\r\n\r\n    } else {\r\n      this.showLogin = true;\r\n    }\r\n\r\n  }\r\n\r\n\t/********************************************************************************************\r\n\t*                                                                                           *\r\n\t*   Funktion setzt das Sidemenü für die Loginseite aus.                                     *\r\n\t*                                                                                           *\r\n\t********************************************************************************************/\r\n\tionViewWillEnter() {\r\n       this.menuCtrl.swipeEnable( false )\r\n   }\r\n\r\n\t/********************************************************************************************\r\n \t*                                                                                           *\r\n \t*   Funktion setzt das Sidemenü nach der Loginseite aktiv.                                  *\r\n \t*                                                                                           *\r\n \t********************************************************************************************/\r\n   ionViewDidLeave() {\r\n       this.menuCtrl.swipeEnable( true )\r\n   }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 114;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 114\n// module chunks = 3","var map = {\n\t\"../pages/login/login.module\": [\n\t\t287,\n\t\t2\n\t],\n\t\"../pages/page/page.module\": [\n\t\t285,\n\t\t1\n\t],\n\t\"../pages/search/search.module\": [\n\t\t286,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 156;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 156\n// module chunks = 3","import { RaumModel } from \"./RaumModel.1\";\r\n\r\nexport class GebaudeModel{\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   gebaudename -> Name eines Gebäudes                                                      *\r\n  *   raume -> Array mit allen Räumen eines Gebäudes                                          *\r\n  *   zugangsberechtigung -> Array mit allen Räumen mit Zugangsbeschränkung                   *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  gebaudename: string = \"\";\r\n  raume: RaumModel[] = [];\r\n  zugangsberechtigung:string[] = [\"D01\",\"D12\",\"D13\",\"D15\",\"D18\",\"C001\",\"C007\",\"C113\",\"C213\",\"C237\",\"C305\",\"C313\",\"C361\",\"C375\",\"C377\",\"C413\"];\r\n\r\n\r\n  constructor(gebaudename:string){\r\n      this.gebaudename = gebaudename;\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion fügt einen Raum in das Array raume ein                                         *\r\n  *                                                                                           *\r\n  *   raum -> Raum, der hinzugefügt werden soll                                               *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  addRaum(raum:RaumModel){\r\n    this.raume.push(raum);\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion, die alle freien Räume zu allen Timeslots ermittelt                            *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  getFreeRooms(){\r\n      var result:string[] = [];// RaumModel[] = [];\r\n      var slots:string[] = this.giveSlots();\r\n      for(var i:number = 0;i<slots.length;i++){\r\n        switch(slots[i]){\r\n          case \"08:15:00\": result.push(\"08:15 bis 09:45:\");break;\r\n          case \"10:00:00\": result.push(\"10:00 bis 11:30:\");break;\r\n          case \"11:45:00\": result.push(\"11:45 bis 13:15:\");break;\r\n          case \"14:15:00\": result.push(\"14:15 bis 15:45:\");break;\r\n          case \"16:00:00\": result.push(\"16:00 bis 17:30:\");break;\r\n          case \"17:45:00\": result.push(\"17:45 bis 19:15:\");break;\r\n          case \"19:30:00\": result.push(\"19:30 bis 21:00:\");break;\r\n          case \"21:00:00\": result.push(\"ab 21:00:\");break;\r\n        }\r\n        this.raume.forEach(raum => {\r\n          if(raum.isFree(slots[i], this.giveWochentag())){\r\n            result.push(raum.raumname);\r\n          }\r\n        });\r\n      }\r\n      return result;\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion gibt zur aktuellen Uhrzeit die nachfolgenden Timeslots zurück.                 *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  private giveSlots(){\r\n    switch(true){\r\n      case this.giveUhrzeit() == \"08:15:00\": return [\"08:15:00\", \"10:00:00\", \"11:45:00\", \"14:15:00\", \"16:00:00\", \"17:45:00\", \"19:30:00\", \"21:00:00\"];\r\n      case this.giveUhrzeit() == \"10:00:00\": return [\"10:00:00\", \"11:45:00\", \"14:15:00\", \"16:00:00\", \"17:45:00\", \"19:30:00\", \"21:00:00\"];\r\n      case this.giveUhrzeit() == \"11:45:00\": return [\"11:45:00\", \"14:15:00\", \"16:00:00\", \"17:45:00\", \"19:30:00\", \"21:00:00\"];\r\n      case this.giveUhrzeit() == \"14:15:00\": return [\"14:15:00\", \"16:00:00\", \"17:45:00\", \"19:30:00\", \"21:00:00\"];\r\n      case this.giveUhrzeit() == \"16:00:00\": return [\"16:00:00\", \"17:45:00\", \"19:30:00\", \"21:00:00\"];\r\n      case this.giveUhrzeit() == \"17:45:00\": return [\"17:45:00\", \"19:30:00\", \"21:00:00\"];\r\n      case this.giveUhrzeit() == \"19:30:00\": return [\"19:30:00\", \"21:00:00\"];\r\n      case this.giveUhrzeit() == \"21:00:00\": return [\"21:00:00\"]\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion gibt die Uhrzeit des aktuellen Slots zurück                                    *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  private giveUhrzeit(){\r\n    var jetzt = new Date();\r\n\r\n    var stunden = jetzt.getHours();\r\n    var minuten = jetzt.getMinutes();\r\n\r\n    switch(true){\r\n      //0:00 - 0:59\r\n      case (stunden == 0) && (minuten >= 0 && minuten <= 59): console.log(\"1\");return \"08:15:00\";\r\n      //1:00 - 1:59\r\n      case (stunden == 1) && (minuten >= 0 && minuten <= 59): console.log(\"2\");return \"08:15:00\";\r\n      //2:00 - 2:59\r\n      case (stunden == 2) && (minuten >= 0 && minuten <= 59): console.log(\"3\");return \"08:15:00\";\r\n      //3:00 - 3:59\r\n      case (stunden == 3) && (minuten >= 0 && minuten <= 59): console.log(\"4\");return \"08:15:00\";\r\n      //4:00 - 4:59\r\n      case (stunden == 4) && (minuten >= 0 && minuten <= 59): console.log(\"5\");return \"08:15:00\";\r\n      //5:00 - 5:59\r\n      case (stunden == 5) && (minuten >= 0 && minuten <= 59): console.log(\"6\");return \"08:15:00\";\r\n      //6:00 - 6:59\r\n      case (stunden == 6) && (minuten >= 0 && minuten <= 59): console.log(\"7\");return \"08:15:00\";\r\n      //7:00 - 7:59\r\n      case (stunden == 7) && (minuten >= 0 && minuten <= 59): console.log(\"8\");return \"08:15:00\";\r\n      //8:00 - 8:59\r\n      case (stunden == 8) && (minuten >= 0 && minuten <= 59): console.log(\"9\");return \"08:15:00\";\r\n      //9:00 - 9:44\r\n      case (stunden == 9) && (minuten >= 0 && minuten <= 44): console.log(\"10\");return \"08:15:00\";\r\n\r\n      //9:45 - 9:59\r\n      case (stunden == 9) && (minuten >= 45 && minuten <= 59): console.log(\"11\");return \"10:00:00\";\r\n      //10:00 - 10:59\r\n      case (stunden == 10) && (minuten >= 0 && minuten <= 59): console.log(\"12\");return \"10:00:00\";\r\n      //11:00 - 11:44\r\n      case (stunden == 11) && (minuten >= 0 && minuten <= 44): console.log(\"13\");return \"10:00:00\";\r\n\r\n      //11:45 - 11:59\r\n      case (stunden == 11) && (minuten >= 45 && minuten <= 59): console.log(\"14\");return \"11:45:00\";\r\n      //12:00 - 12:59\r\n      case (stunden == 12) && (minuten >= 0 && minuten <= 59): console.log(\"15\");return \"11:45:00\";\r\n      //13:00 - 13:59\r\n      case (stunden == 13) && (minuten >= 0 && minuten <= 59): console.log(\"16\");return \"11:45:00\";\r\n      //14:00 - 14:14\r\n      case (stunden == 14) && (minuten >= 0 && minuten <= 14): console.log(\"17\");return \"11:45:00\";\r\n\r\n      //14:15 - 14:59\r\n      case (stunden == 14) && (minuten >= 15 && minuten <= 59): console.log(\"18\");return \"14:15:00\";\r\n      //15:00 - 15:59\r\n      case (stunden == 15) && (minuten >= 0 && minuten <= 59): console.log(\"19\");return \"14:15:00\";\r\n\r\n      //16:00 - 16:59\r\n      case (stunden == 16) && (minuten >= 0 && minuten <= 59): console.log(\"20\");return \"16:00:00\";\r\n      //17:00 - 17:44\r\n      case (stunden == 17) && (minuten >= 0 && minuten <= 44): console.log(\"21\");return \"16:00:00\";\r\n\r\n      //17:45 - 17:59\r\n      case (stunden == 17) && (minuten >= 45 && minuten <= 59): console.log(\"22\");return \"17:45:00\";\r\n      //18:00 - 18:59\r\n      case (stunden == 18) && (minuten >= 0 && minuten <= 59): console.log(\"23\");return \"17:45:00\";\r\n      //19:00 - 19:29\r\n      case (stunden == 19) && (minuten >= 0 && minuten <= 29): console.log(\"24\");return \"17:45:00\";\r\n\r\n      //19:30 - 19:59\r\n      case (stunden == 19) && (minuten >= 30 && minuten <= 59): console.log(\"25\");return \"19:30:00\";\r\n      //20:00 - 20:59\r\n      case (stunden == 20) && (minuten >= 0 && minuten <= 59): console.log(\"26\");return \"19:30:00\";\r\n\r\n      //21:00 - 21:59\r\n      case (stunden == 21) && (minuten >= 0 && minuten <= 59): console.log(\"27\");return \"21:00:00\";\r\n      //22:00 - 22:59\r\n      case (stunden == 22) && (minuten >= 0 && minuten <= 59): console.log(\"28\");return \"21:00:00\";\r\n      //23:00 - 23:59\r\n      case (stunden == 23) && (minuten >= 0 && minuten <= 59): console.log(\"29\");return \"21:00:00\";\r\n\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion gibt den aktuellen Wochentag zurück                                            *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  private giveWochentag(){\r\n    var jetzt = new Date();\r\n    switch(jetzt.getDay()){\r\n      case 1: return \"Montag\";\r\n      case 2: return \"Dienstag\";\r\n      case 3: return \"Mittwoch\";\r\n      case 4: return \"Donnerstag\";\r\n      case 5: return \"Freitag\";\r\n      case 6: return \"Samstag\";\r\n      case 0: return \"Sonntag\";\r\n      default: break;\r\n    }\r\n  }\r\n\r\n    getRoom(name:string){\r\n        this.raume.forEach(raum => {\r\n            if(raum.raumname == name){\r\n                return raum;\r\n            }\r\n        });\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/GebaudeModel.ts","import { RaumModel } from './RaumModel.1';\r\nimport ICAL from \"ical.js\";\r\nimport { Veranstaltung } from './Veranstaltung';\r\nimport { GebaudeModel } from './GebaudeModel';\r\nimport { CampusModel } from './CampusModel';\r\n\r\n\r\nexport class Darstellung {\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Enthält alle Gebäude und Räume in den Gebäuden                                          *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  CampusConfig = [\r\n\r\n    {\r\n      gebaudename: \"C\",\r\n      raumnamen: [\r\n        \"C001\",\r\n        \"C007\",\r\n        \"C035\",\r\n        \"C037\",\r\n        \"C113\",\r\n        \"C213\",\r\n        \"C237\",\r\n        \"C305\",\r\n        \"C313\",\r\n        \"C361\",\r\n        \"C375\",\r\n        \"C377\",\r\n        \"C405\",\r\n        \"C407\",\r\n        \"C413\",\r\n      ]\r\n\r\n    },\r\n\r\n    {\r\n      gebaudename: \"D\",\r\n      raumnamen: [\r\n        \"D01\",\r\n        \"D02\",\r\n        \"D12\",\r\n        \"D13\",\r\n        \"D14\",\r\n        \"D15\",\r\n        \"D17\",\r\n        \"D18\",\r\n      ]\r\n\r\n    }\r\n\r\n  ];\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   GebaudeAuswahl -> Nummer des Gebäudes (0 -> C-Gebäude, 1 -> D-Gebäude)                  *\r\n  *   freeRooms -> Array, in den freie Räume mit Uhrzeit geschrieben werden                   *\r\n  *   zugang -> Array, in den alle Räume mit Zugangsbeschränkung geschrieben werden           *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  GebaudeAuswahl:number;\r\n  freeRooms:string[] = [];\r\n  zugang:string[] = [];\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Konstruktor setzt das Gebäude.                                                             *\r\n  *                                                                                           *\r\n  *   wahl -> Nummer des Gebäude (0 -> C-Gebäude, 1 -> D-Gebäude)                             *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  constructor(wahl:number){\r\n    this.GebaudeAuswahl = wahl;\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion gibt den aktuellen Wochentag zurück                                            *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  giveWochentag(){\r\n    var jetzt = new Date();\r\n    switch(jetzt.getDay()){\r\n      case 1: return \"Montag\";\r\n      case 2: return \"Dienstag\";\r\n      case 3: return \"Mittwoch\";\r\n      case 4: return \"Donnerstag\";\r\n      case 5: return \"Freitag\";\r\n      case 6: return \"Samstag\";\r\n      case 0: return \"Sonntag\";\r\n      default: break;\r\n      }\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion ermittelt anhand eines Datums den dazugehörigen Wochentag.                     *\r\n  *                                                                                           *\r\n  *   text -> Datum                                                                           *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  parseDateToWochentag(text:string) {\r\n    var datum:any = text.split(\"T\");\r\n    datum.pop();\r\n    datum = datum[0].split(\"-\");\r\n    var datum2:any = new Date(datum[0],datum[1]-1,datum[2]);\r\n    var tag:any = datum2.getDay();\r\n    var wochentag:any = ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'];\r\n    return wochentag[tag];\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion parst die Uhrzeit aus dem Raumplan in das Format HH:MM:SS.                     *\r\n  *                                                                                           *\r\n  *   text -> Uhrzeit, die geparst werden soll                                                *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  parseUhrZeit(text:string) {\r\n    var datum:any = text.split(\"T\");\r\n    var tmp:any = datum[1];\r\n    return tmp;\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion fügt in die Gebäude einen Raum hinzu                                           *\r\n  *                                                                                           *\r\n  *   raumnamen -> Array mit Namen der Räume                                                  *\r\n  *   name -> Name des Gebäudes                                                               *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  parseGebaude(raumnamen:string[], name:string){\r\n    var gebaude = new GebaudeModel(name);\r\n    raumnamen.forEach(raumname=> {\r\n      var raum = this.parseToRaum(raumname);\r\n      gebaude.addRaum(raum);\r\n\r\n    });\r\n    return gebaude;\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion parst die Raumpläne und legt Veranstaltungen an.                               *\r\n  *                                                                                           *\r\n  *   raumname -> Name des Raums für den der Raumplan ermittelt werden soll                   *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  parseToRaum(raumname: string){\r\n    var raum = new RaumModel(raumname);\r\n\r\n    var ics = raum.getICS(localStorage.getItem(raumname));\r\n    ics.pop();\r\n\r\n    var jcalData = ICAL.parse(ics.join(\"\\r\\n\"));\r\n    var vcalendar = new ICAL.Component(jcalData);\r\n    var vevent = vcalendar.getAllSubcomponents('vevent');\r\n\r\n    for(var i:number = 0; i < vevent.length; i++){\r\n      var start = vevent[i].getFirstPropertyValue('dtstart');\r\n      var end = vevent[i].getFirstPropertyValue('dtend');\r\n      var startZeit = this.parseUhrZeit(start.toString());\r\n      var endZeit = this.parseUhrZeit(end.toString());\r\n      var name = vevent[i].getFirstPropertyValue('description');\r\n      var wochentag = this.parseDateToWochentag(start.toString());\r\n      var veranstaltung = new Veranstaltung(name, wochentag, startZeit, endZeit);\r\n      raum.addVeranstaltung(veranstaltung);\r\n\r\n      switch(startZeit){\r\n\r\n        case \"08:15:00\":\r\n        if (endZeit == \"11:30:00\") {\r\n          var veranstaltung1 = new Veranstaltung(name, wochentag, \"10:00:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung1);\r\n        }\r\n        else if (endZeit == \"13:15:00\"){\r\n          var veranstaltung2 = new Veranstaltung(name, wochentag, \"10:00:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung2);\r\n          var veranstaltung3 = new Veranstaltung(name, wochentag, \"11:45:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung3);\r\n        }\r\n        break;\r\n\r\n        case \"10:00:00\":\r\n        if (endZeit == \"13:15:00\") {\r\n          var veranstaltung4 = new Veranstaltung(name, wochentag, \"11:45:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung4);\r\n        }\r\n        else if (endZeit == \"15:45:00\") {\r\n          var veranstaltung5 = new Veranstaltung(name, wochentag, \"11:45:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung5);\r\n          var veranstaltung6 = new Veranstaltung(name, wochentag, \"14:15:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung6);\r\n        }\r\n        break;\r\n\r\n        case \"11:45:00\":\r\n        if (endZeit == \"15:45:00\") {\r\n          var veranstaltung7 = new Veranstaltung(name, wochentag, \"14:15:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung7);\r\n        }\r\n        else if (endZeit == \"17:30:00\") {\r\n          var veranstaltung8 = new Veranstaltung(name, wochentag, \"14:15:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung8);\r\n          var veranstaltung9 = new Veranstaltung(name, wochentag, \"16:00:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung9);\r\n        }\r\n        break;\r\n\r\n        case \"14:15:00\":\r\n        if (endZeit == \"17:30:00\") {\r\n          var veranstaltung10 = new Veranstaltung(name, wochentag, \"16:00:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung10);\r\n        }\r\n        else if (endZeit == \"19:15:00\"){\r\n          var veranstaltung11 = new Veranstaltung(name, wochentag, \"16:00:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung11);\r\n          var veranstaltung12 = new Veranstaltung(name, wochentag, \"17:45:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung12);\r\n        }\r\n        break;\r\n\r\n        case \"16:00:00\":\r\n        if (endZeit == \"19:15:00\") {\r\n          var veranstaltung13 = new Veranstaltung(name, wochentag, \"17:45:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung13);\r\n        }\r\n        else if (endZeit == \"21:00:00\"){\r\n          var veranstaltung14 = new Veranstaltung(name, wochentag, \"17:45:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung14);\r\n          var veranstaltung15 = new Veranstaltung(name, wochentag, \"19:30:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung15);\r\n        }\r\n        break;\r\n\r\n        case \"17:45:00\":\r\n        if (endZeit == \"21:00:00\") {\r\n          var veranstaltung16 = new Veranstaltung(name, wochentag, \"19:30:00\", endZeit);\r\n          raum.addVeranstaltung(veranstaltung16);\r\n        }\r\n        default:\r\n      }\r\n    }\r\n    return raum;\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion erstellt den Campus und füllt den Array freeRooms mit den freien Räumen.       *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  parseToCampus(){\r\n    var campus = new CampusModel(\"HSRM\");\r\n    for(let gebaudeConfig of this.CampusConfig){\r\n      var gebaude = this.parseGebaude(gebaudeConfig.raumnamen, gebaudeConfig.gebaudename)\r\n      campus.addGebaude(gebaude);\r\n    }\r\n    for(var i: number = 0; i < campus.gebaude[this.GebaudeAuswahl].getFreeRooms().length; i++){\r\n      this.freeRooms.push(campus.gebaude[this.GebaudeAuswahl].getFreeRooms()[i]);\r\n    }\r\n    for(var j:number = 0;j<campus.gebaude[this.GebaudeAuswahl].zugangsberechtigung.length;j++){//zugang1.length;i++){\r\n      this.zugang.push(campus.gebaude[this.GebaudeAuswahl].zugangsberechtigung[j]);\r\n    }\r\n    return campus;\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion entfernt die Sekunden in der Uhrzeit                                           *\r\n  *                                                                                           *\r\n  *   zeit -> Uhrzeit, die bearbeitet werden soll                                             *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  changeZeit(zeit:string){\r\n    switch(zeit){\r\n      case \"08:15:00\": return \"08:15\";\r\n      case \"09:45:00\": return \"09:45\";\r\n      case \"10:00:00\": return \"10:00\";\r\n      case \"11:30:00\": return \"11:30\";\r\n      case \"11:45:00\": return \"11:45\";\r\n      case \"13:15:00\": return \"13:15\";\r\n      case \"14:15:00\": return \"14:15\";\r\n      case \"15:45:00\": return \"15:45\";\r\n      case \"16:00:00\": return \"16:00\";\r\n      case \"17:30:00\": return \"17:30\";\r\n      case \"17:45:00\": return \"17:45\";\r\n      case \"19:15:00\": return \"19:15\";\r\n      case \"19:30:00\": return \"19:30\";\r\n      case \"21:00:00\": return \"21:00\";\r\n    }\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion erstellt ein HTML-Element.                                                     *\r\n  *                                                                                           *\r\n  *   text -> Text der in das HTML-Element gefüllt werden soll.                               *\r\n  *   tag -> Tag des HTML-Elements                                                            *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  erstelleElement(text:string, tag:string){\r\n    var element: HTMLElement = document.createElement(tag);\r\n    var texte:string[] = text.split(\",\");\r\n\r\n    for(var i:number = 0;i<texte.length;i++){\r\n      var breaks:HTMLElement = document.createElement(\"div\");\r\n      var text2  = document.createTextNode(texte[i]);\r\n      breaks.appendChild(text2);\r\n      element.appendChild(breaks);\r\n    }\r\n    if(texte.length>1){\r\n      element.style.borderRadius = \"6px\";\r\n      element.style.width = \"100%\";\r\n      element.style.padding = \"3px\";\r\n    }\r\n    return element;\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion erstellt eine optische Darstellung                                             *\r\n  *   der in getLehrveranstaltungen() ermittelten                                             *\r\n  *   Lehrveranstaltungen für einen Raum                                                      *\r\n  *                                                                                           *\r\n  *   lehrveranstaltungen -> ein Array mit den Lehrveranstaltungen, Uhrzeiten und Wochentagen *\r\n  *   raumname -> Name des Raums für den der Raumplan dargestellt werden soll                 *\r\n  *                                                                                           *\r\n  *   Aufbau des DOM-Trees:                                                                   *\r\n  *   <show2> //in c.ts bzw. d.ts                                                             *\r\n  *     <inhalt>                              #                                               *\r\n  *       <ueberschrift>                        #                                             *\r\n  *       ...Kann mehrere Ueberschriften         # werden in dieser Funktion erstellt         *\r\n  *       <veranstaltung>                        # und dann zurückgegeben                     *\r\n  *       ...und Veranstaltungen enthalten      #                                             *\r\n  *     </inhalt>                             #                                               *\r\n  *   </show2>                                                                                *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  zeigeLehrveranstaltungen(lehrveranstaltungen:string[], raumname:string){\r\n    var inhalt: HTMLElement = document.createElement(\"div\");\r\n    var ueberschrift: HTMLElement = this.erstelleElement(raumname,\"h3\");\r\n    inhalt.appendChild(ueberschrift);\r\n\r\n    var veranstaltung: HTMLElement;\r\n    var lehrvtmp:string = \"\";\r\n    if(lehrveranstaltungen.length == 0){\r\n      veranstaltung = this.erstelleElement(\"In diesem Raum finden keine Veranstaltungen statt.,Studentischer Arbeitsraum.\", \"p\");\r\n      veranstaltung.style.backgroundColor = \"rgba(140, 140, 140, 0.3)\";\r\n      veranstaltung.style.border = \"2px solid rgb(140, 140, 140)\";\r\n      inhalt.appendChild(veranstaltung);\r\n      return inhalt;\r\n    }\r\n    for(var j:number = 0;j < lehrveranstaltungen.length;j++){\r\n      switch(lehrveranstaltungen[j]){\r\n        case \"Montag\":\r\n          ueberschrift = this.erstelleElement(\"Montag\", \"h5\");\r\n          inhalt.appendChild(ueberschrift);continue;\r\n        case \"Dienstag\":\r\n          ueberschrift = this.erstelleElement(\"Dienstag\", \"h5\");\r\n          inhalt.appendChild(ueberschrift);continue;\r\n        case \"Mittwoch\":\r\n          ueberschrift = this.erstelleElement(\"Mittwoch\", \"h5\");\r\n          inhalt.appendChild(ueberschrift);continue;\r\n        case \"Donnerstag\":\r\n          ueberschrift = this.erstelleElement(\"Donnerstag\", \"h5\");\r\n          inhalt.appendChild(ueberschrift);continue;\r\n        case \"Freitag\":\r\n          ueberschrift = this.erstelleElement(\"Freitag\", \"h5\");\r\n          inhalt.appendChild(ueberschrift);continue;\r\n        case \"Samstag\":\r\n          ueberschrift = this.erstelleElement(\"Samstag\", \"h5\");\r\n          inhalt.appendChild(ueberschrift);continue;\r\n        case \"Sonntag\":\r\n          ueberschrift = this.erstelleElement(\"Sonntag\", \"h5\");\r\n          inhalt.appendChild(ueberschrift);continue;\r\n      }\r\n      if(lehrveranstaltungen[j] != lehrvtmp){\r\n        //Ermitteln welcher Veranstaltungstyp es ist:\r\n        var vl = lehrveranstaltungen[j].indexOf(\"Vorlesung\");\r\n        var se = lehrveranstaltungen[j].indexOf(\"Seminar\");\r\n        var pr = lehrveranstaltungen[j].indexOf(\"Praktikum\");\r\n        var ue = lehrveranstaltungen[j].indexOf(\"Übung\");\r\n\r\n        if(vl != -1){\r\n          //Vorlesung erstellen:\r\n          veranstaltung = this.erstelleElement(\"\"+lehrveranstaltungen[j]+\",\"+lehrveranstaltungen[j+1],\"p\");\r\n          veranstaltung.style.backgroundColor = \"rgba(74, 106, 255, 0.5)\";\r\n          veranstaltung.style.border = \"2px solid rgb(74, 106, 255)\";\r\n          inhalt.appendChild(veranstaltung);\r\n        }else if(se != -1){\r\n          //Seminar erstellen:\r\n          veranstaltung = this.erstelleElement(\"\"+lehrveranstaltungen[j]+\",\"+lehrveranstaltungen[j+1],\"p\");\r\n          veranstaltung.style.backgroundColor = \"rgba(26, 123, 81, 0.5)\";\r\n          veranstaltung.style.border = \"2px solid rgb(26, 123, 81)\";\r\n          inhalt.appendChild(veranstaltung);\r\n        }else if(pr != -1){\r\n          //Praktikum erstellen:\r\n          veranstaltung = this.erstelleElement(\"\"+lehrveranstaltungen[j]+\",\"+lehrveranstaltungen[j+1],\"p\");\r\n          veranstaltung.style.backgroundColor = \"rgba(255, 146, 63, 0.5)\";\r\n          veranstaltung.style.border = \"2px solid rgb(255, 146, 63)\";\r\n          inhalt.appendChild(veranstaltung);\r\n        }else if(ue != -1){\r\n          //Uebung erstellen:\r\n          veranstaltung = this.erstelleElement(\"\"+lehrveranstaltungen[j]+\",\"+lehrveranstaltungen[j+1],\"p\");\r\n          veranstaltung.style.backgroundColor = \"rgba(44, 250, 40, 0.4)\";\r\n          veranstaltung.style.border = \"2px solid rgb(44, 250, 40)\";\r\n          inhalt.appendChild(veranstaltung);\r\n        }else {\r\n          //Sonstige Veranstaltung erstellen:\r\n          veranstaltung = this.erstelleElement(\"\"+lehrveranstaltungen[j]+\",\"+lehrveranstaltungen[j+1],\"p\");\r\n          veranstaltung.style.backgroundColor = \"rgba(140, 140, 140, 0.3)\";\r\n          veranstaltung.style.border = \"2px solid rgb(140, 140, 140)\";\r\n          inhalt.appendChild(veranstaltung);\r\n        }\r\n        lehrvtmp = lehrveranstaltungen[j+1];\r\n      }\r\n    }\r\n    return inhalt;\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion ermittelt Lehrveranstaltungen für einen Raum                                   *\r\n  *                                                                                           *\r\n  *   raumname -> Name des Raums für den der Raumplan ermittelt werden soll                   *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  getLehrveranstaltungen(raumname:string){\r\n    var LehrveranstaltungoffreeRooms:string[] = [];\r\n    var Wochentag:string = \"\";\r\n    var uhrzeit:string;\r\n    var uhrzeittmp:string = \"\";\r\n    var name:string;\r\n    var enduhrzeit:string;\r\n    var enduhrzeittmp:string = \"\";\r\n\r\n    for(var i:number = 0; i< this.parseToRaum(raumname).veranstaltungen.length; i++){\r\n      name = this.parseToRaum(raumname).veranstaltungen[i].name;\r\n\r\n      if(this.parseToRaum(raumname).veranstaltungen[i].wochentag != Wochentag){\r\n        Wochentag = this.parseToRaum(raumname).veranstaltungen[i].wochentag;\r\n        LehrveranstaltungoffreeRooms.push(Wochentag);\r\n        enduhrzeittmp = \"\";\r\n        uhrzeittmp = \"\";\r\n      }\r\n\r\n      uhrzeit = this.changeZeit(this.parseToRaum(raumname).veranstaltungen[i].uhrzeit);\r\n      enduhrzeit = this.changeZeit(this.parseToRaum(raumname).veranstaltungen[i].enduhrzeit);\r\n      if(uhrzeit != uhrzeittmp && enduhrzeit != enduhrzeittmp){\r\n        name = name.replace(\"\\\\\",\"\");\r\n        name = name.replace(\",\",\"\");\r\n        LehrveranstaltungoffreeRooms.push(name);\r\n        if(uhrzeit === undefined){\r\n          LehrveranstaltungoffreeRooms.push(\"Keine Uhrzeit vorhanden!\");\r\n        }else {\r\n          LehrveranstaltungoffreeRooms.push(uhrzeit+\" bis \"+enduhrzeit);\r\n        }\r\n        uhrzeittmp = uhrzeit;\r\n        enduhrzeittmp = enduhrzeit;\r\n      }\r\n    }\r\n    return this.zeigeLehrveranstaltungen(LehrveranstaltungoffreeRooms, raumname);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/Darstellung.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { HttpClientModule, HttpClient} from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http'\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { MyApp } from './app.component';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { Gebaude } from '../pages/page/page';\r\nimport { Search } from '../pages/search/search';\r\nimport { LoginPage } from '../pages/login/login';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    HomePage,\r\n    Gebaude,\r\n    Search,\r\n    LoginPage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(MyApp),\r\n    HttpClientModule,\r\n    HttpModule\r\n\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    HomePage,\r\n    Gebaude,\r\n    Search,\r\n    LoginPage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    HttpClient,\r\n\r\n\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Veranstaltung } from \"./Veranstaltung\";\r\n\r\n\r\n\r\nexport class RaumModel{\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   raumname -> Name des Raums                                                              *\r\n  *   veranstaltungen -> Array, in den Veranstaltungen eines Raumes geschrieben werden        *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  raumname:string = \"\";\r\n  veranstaltungen:Veranstaltung [] = [];\r\n\r\n\r\n  constructor (raumname:string){\r\n    this.raumname = raumname;\r\n\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion fügt einem Raum eine Veranstaltung hinzu                                       *\r\n  *                                                                                           *\r\n  *   veranstaltung -> Veranstaltung, die hinzugefügt werden soll                             *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  addVeranstaltung(veranstaltung: Veranstaltung){\r\n    this.veranstaltungen.push(veranstaltung);\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion gibt einen übergebenen Text in eine Array aufgesplittet zurück                 *\r\n  *                                                                                           *\r\n  *   text -> Text, der gesplittet werden soll                                                *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  getICS(text:string) {\r\n    text.trim();\r\n    //console.log(\"text.split(\\\\r\\\\n): \"+text.split(\"\\\\r\\\\n\"));\r\n    return text.split(\"\\\\r\\\\n\");\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion parst die Uhrzeit aus dem Raumplan in das Format HH:MM:SS.                     *\r\n  *                                                                                           *\r\n  *   text -> Uhrzeit, die geparst werden soll                                                *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  getUhrZeit(text:string) {\r\n    var datum:any = text.split(\"T\");\r\n    var tmp:any = datum[1];\r\n    return tmp;\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion ermittelt, wann der Raum frei ist                                              *\r\n  *                                                                                           *\r\n  *   uhrzeit -> Uhrzeit, zu der der Raum frei sein soll                                      *\r\n  *   wochentag -> Wochentag, zu dem der Raum frei sein soll                                  *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  isFree(uhrzeit:string, wochentag:string){\r\n    var result:any = true;\r\n    this.veranstaltungen.forEach(veranstaltung => {\r\n      if(veranstaltung.wochentag == wochentag && veranstaltung.uhrzeit == uhrzeit){\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/RaumModel.1.ts","export class Veranstaltung{\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   name -> Name der Veranstaltung                                                          *\r\n  *   wochentag -> Wochentag der Veranstaltung                                                *\r\n  *   uhrzeit -> Uhrzeit, zu der die Veranstaltung beginnt                                    *\r\n  *   enduhrzeit -> Uhrzeit, zu der die Veranstaltung zu Ende ist                             *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  name:string = \"\";\r\n  wochentag:string = \"\";\r\n  uhrzeit:string= \"\";\r\n  enduhrzeit:string= \"\";\r\n\r\n  constructor (name: string, wochentag: string, uhrzeit: string,enduhrzeit:string){\r\n      this.name = name;\r\n      this.uhrzeit = uhrzeit;\r\n      this.wochentag = wochentag;\r\n      this.enduhrzeit = enduhrzeit;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/Veranstaltung.ts","import { GebaudeModel } from \"./GebaudeModel\";\r\n\r\nexport class CampusModel{\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   campusname -> Name des Campus                                                           *\r\n  *   gebaude -> Array, mit Gebäuden                                                          *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  campusname: string =\"\";\r\n  gebaude: GebaudeModel[] = [];\r\n\r\n\r\n  constructor(name:string){\r\n    this.campusname = name;\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion fügt ein Gebäude dem Array gebaude hinzu                                       *\r\n  *                                                                                           *\r\n  *   gebaude -> Gebäude, das in den Array gebaude eingefügt werden soll                      *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  addGebaude(gebaude:GebaudeModel){\r\n    this.gebaude.push(gebaude);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/model/CampusModel.ts","import { Component,ViewChild } from '@angular/core';\r\nimport { Platform, Nav } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { Gebaude } from '../pages/page/page';\r\nimport { Search } from '../pages/search/search';\r\nimport { LoginPage } from '../pages/login/login';\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  @ViewChild(Nav) nav:Nav;\r\n  rootPage:any = LoginPage;\r\n  navCtrl:any;\r\n  pages: Array<{title: string, component: any, item: string}>;\r\n\r\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\r\n  this.platform.ready().then(() => {\r\n    this.statusBar.styleDefault();\r\n    this.splashScreen.hide\r\n    platform.registerBackButtonAction(() => {\r\n      console.log(\"backPressed 1\");\r\n      //this.navCtrl.setRoot(HomePage);\r\n    },1);\r\n  });\r\n\r\n    this.pages = [\r\n      { title: 'Campusplan', component: HomePage, item: \"Home\" },\r\n      { title: 'Gebäude C', component: Gebaude, item: \"C\" },\r\n      { title: 'Gebäude D', component: Gebaude, item: \"D\" },\r\n      { title: 'Raumsuche', component: Search, item: \"Search\" }\r\n    ];\r\n  }\r\n\r\n  openPage(page, item) {\r\n    // Reset the content nav to have just this page\r\n    // we wouldn't want the back button to show in this scenario\r\n    this.nav.setRoot(page.component, {item: item});\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { GebaudeModel } from '../../model/GebaudeModel';\r\nimport { Darstellung } from '../../model/Darstellung';\r\n\r\n/********************************************************************************************\r\n*                                                                                           *\r\n*   freeTimeSlot -> Array für die freien Slots eines Raums                                  *\r\n*   freeUeberschrift -> Array für die Überschrift des Ergebnisses der Raumsuche             *\r\n*   StundenSlot -> Array mit den Slots                                                      *\r\n*                                                                                           *\r\n********************************************************************************************/\r\nvar freeTimeSlot : number [] = [];\r\nvar freeUeberschrift:string[] = [];\r\n\r\nvar StundenSlot: string [] = [\r\n  '08:15:00', '10:00:00', '11:45:00', '14:15:00', '16:00:00', '17:45:00', '19:30:00','21:00:00'\r\n];\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-search',\r\n  templateUrl: 'search.html',\r\n})\r\nexport class Search {\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   darstellung -> Objekt vom Typ Darstellung                                               *\r\n  *   gebaude -> ein Gebäude (wird benötigt für die Anzeige der Zugangsbeschränkung)          *\r\n  *   freeTimeSlot -> Array für die freien Slots eines Raums                                  *\r\n  *   freeUeberschrift -> Array für die Überschrift des Ergebnisses der Raumsuche             *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  private darstellung:Darstellung;\r\n  private darstellung2:Darstellung;\r\n  private gebaude:GebaudeModel = new GebaudeModel(\"C\");\r\n  private freeTimeSlot:number [] = freeTimeSlot;\r\n  private freeUeberschrift:string[] = freeUeberschrift;\r\n\r\n  constructor(public toastCtrl: ToastController, public navCtrl: NavController, public navParams: NavParams) {\r\n  }\r\n\r\n  ionViewDidLoad(){\r\n    console.log('ionViewDidLoad SearchPage');\r\n    this.darstellung = new Darstellung(0);\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion ermittelt für einen Raum die freien Slots                                      *\r\n  *   searchbar -> die Suchmaske                                                              *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  searchRoom(searchbar){\r\n    freeTimeSlot = [];\r\n    var room:string = searchbar.target.value;\r\n    var raume:string[] = [];\r\n    var zahl:number = 0;\r\n    var lieblingsraum = \"Der Raum\";\r\n\r\n    var liste:HTMLElement = document.getElementById('liste');\r\n\r\n    var fehlerFeld: HTMLElement = document.getElementById('Fehler');\r\n    fehlerFeld.innerText = \"Raum konnte nicht gefunden werden\";\r\n    fehlerFeld.style.display = \"none\";\r\n\r\n    //Raumliste wird gefüllt:\r\n    if(room.indexOf(\"C\") == 0){\r\n      for(var i:number = 0; i < this.darstellung.CampusConfig[0].raumnamen.length; i++){\r\n        raume.push(this.darstellung.CampusConfig[0].raumnamen[i]);\r\n        console.log(this.darstellung.CampusConfig[0].raumnamen[i]);\r\n      }\r\n    }\r\n    else if(room.indexOf(\"D\") == 0){\r\n      for(var j:number = 0; j < this.darstellung.CampusConfig[1].raumnamen.length; j++){\r\n        raume.push(this.darstellung.CampusConfig[1].raumnamen[j]);\r\n        console.log(this.darstellung.CampusConfig[1].raumnamen[j]);\r\n      }\r\n    }\r\n\r\n    //Fehlerbehandlung:\r\n    if(raume.indexOf(room) == -1){\r\n      fehlerFeld.style.display = \"block\";\r\n      liste.style.display = \"none\";\r\n      return;\r\n    }\r\n\r\n    //Die einzelnen Timeslots werden überprüft:\r\n    for(var y:number = 0; y < StundenSlot.length; y++){\r\n      console.log(StundenSlot[y]);\r\n      if(this.darstellung.parseToRaum(room).isFree(StundenSlot[y],this.darstellung.giveWochentag())){\r\n        freeTimeSlot.push(y);\r\n       }\r\n      else{\r\n        freeTimeSlot.push(99);\r\n        zahl++;\r\n      }\r\n    }\r\n\r\n    //Zugangsbeschränkung?:\r\n    var zugang:string[] = this.gebaude.zugangsberechtigung;\r\n    console.log(zugang);\r\n    if(zugang.indexOf(room) != -1){\r\n      this.toasts(\"Für den Raum \"+room+\" brauchst du eine Zugangsberechtigung!\");\r\n    }\r\n\r\n    console.log(freeTimeSlot);\r\n    liste.style.display = \"block\";\r\n\r\n    var markiert:string[] = [];\r\n    if(localStorage.getItem(\"markiert\") != null){\r\n      markiert = localStorage.getItem(\"markiert\").split(\",\");\r\n    }\r\n    if(markiert.indexOf(room) != -1){\r\n      lieblingsraum = \"Dein Lieblingsraum \";\r\n    }\r\n\r\n    //Überschrift anpassen:\r\n    if(zahl == StundenSlot.length){\r\n      freeUeberschrift[0] = lieblingsraum+\" \\\"\"+room+\"\\\" ist heute leider nicht frei!\";\r\n    }else{\r\n      freeUeberschrift[0] = lieblingsraum+\" \\\"\"+room+\"\\\" ist heute zu folgenden Uhrzeiten frei:\";\r\n    }\r\n\r\n    this.navCtrl.setRoot(this.navCtrl.getActive().component);\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion erstellt eine Meldung                                                          *\r\n  *   message -> String mit der Nachricht, die die Meldung enthalten soll                     *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  toasts(message:string){\r\n    let toast = this.toastCtrl.create({\r\n        message:  message,\r\n        duration: 2000,\r\n        position: 'middle',\r\n        cssClass: \"my-toast\"\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/search/search.ts","import { Component } from '@angular/core';\r\nimport { AlertController, ToastController } from 'ionic-angular';\r\nimport { NavController } from 'ionic-angular';\r\nimport { Gebaude } from '../page/page';\r\nimport { Search } from '../search/search';\r\n\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html'\r\n})\r\nexport class HomePage {\r\n\r\n  constructor(public toastCtrl: ToastController, public navCtrl: NavController, private alertCtrl: AlertController) {\r\n\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion leitet weiter auf page.html                                                    *\r\n  *   Es wird das item \"C\" an die Seite übermittelt um die Seite für das C-Gebäude            *\r\n  *   zu erstellen.                                                                           *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  nextC() {\r\n    this.navCtrl.setRoot( Gebaude, {item: \"C\"});\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion leitet weiter auf page.html                                                    *\r\n  *   Es wird das item \"D\" an die Seite übermittelt um die Seite für das D-Gebäude            *\r\n  *   zu erstellen.                                                                           *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  nextD() {\r\n    this.navCtrl.setRoot( Gebaude, {item: \"D\"});\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion leitet weiter auf search.html                                                  *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  search() {\r\n    this.navCtrl.setRoot( Search);\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion löscht die Benutzerdaten                                                       *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  deleteDaten() {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Benutzerdaten',\r\n      message: 'Willst du wirklich deine Benutzerdaten löschen?',\r\n      buttons: [\r\n        {\r\n          text: 'Nein',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            alert = null;\r\n          }\r\n        },\r\n        {\r\n          text: 'Ja',\r\n          handler: () => {\r\n            localStorage.removeItem(\"benutzer\");\r\n            localStorage.removeItem(\"passwort\");\r\n            let toast = this.toastCtrl.create({\r\n                message:  \"Benutzerdaten gelöscht!\",\r\n                duration: 2000,\r\n                position: 'middle',\r\n                cssClass: \"my-toast\"\r\n            });\r\n            toast.present();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    alert.present();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { Content } from 'ionic-angular';\r\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\r\nimport { HomePage } from '../home/home';\r\nimport { Search } from '../search/search';\r\nimport { Darstellung } from '../../model/Darstellung';\r\n\r\n/********************************************************************************************\r\n*                                                                                           *\r\n*   ueberschrift -> Array für die Überschrift der Seite                                     *\r\n*   headTitle -> Array für den Titel der Seite                                              *\r\n*                                                                                           *\r\n********************************************************************************************/\r\nvar ueberschrift:string[] = [];\r\nvar headTitle:string[] = [];\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'gebaude',\r\n  templateUrl: 'page.html',\r\n})\r\nexport class Gebaude {\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   ueberschrift -> Array für die Überschrift der Seite                                     *\r\n  *   headTitle -> Array für den Titel der Seite                                              *\r\n  *   freeRooms -> Array mit den freien Räumen                                                *\r\n  *   zugang -> Array mit den Räumen, die eine Zugangsbeschränkung haben                      *\r\n  *   markiert -> Array mit allen markierten Räumen                                           *\r\n  *   entmarkiert -> Array mit allen nicht markierten Räumen                                  *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  private ueberschrift:string[] = ueberschrift;\r\n  private headTitle:string[] = headTitle;\r\n  private freeRooms:string[] = [];\r\n  private zugang:string[] = [];\r\n  private markiert:string[] = [];\r\n  private entmarkiert:string[] = [\"D01\", \"D02\", \"D12\", \"D13\", \"D14\", \"D15\", \"D17\", \"D18\", \"C001\", \"C007\", \"C035\", \"C037\", \"C113\", \"C213\", \"C237\", \"C305\", \"C313\", \"C361\", \"C375\", \"C377\", \"C405\", \"C407\", \"C413\"];\r\n\r\n\r\n  @ViewChild(Content) content: Content;\r\n\r\n  private darstellung:Darstellung;\r\n  constructor(public toastCtrl: ToastController, public navCtrl: NavController, public navParams: NavParams) {\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log(\"NAVPARAMS: \"+ this.navParams.get('item'))\r\n    var page:string = this.navParams.get('item');\r\n    var show: HTMLElement = document.getElementById('Lehraussen');\r\n    show.style.display = \"none\";\r\n    var innen: HTMLElement = document.getElementById('Lehrinnen');\r\n    innen.style.display = \"none\";\r\n    var span1: HTMLElement = document.getElementById('span1');\r\n    span1.style.display = \"none\";\r\n    var span2: HTMLElement = document.getElementById('span2');\r\n    span2.style.display = \"none\";\r\n    var button: HTMLElement = document.getElementById('button');\r\n    button.style.display = \"none\";\r\n    console.log('ionViewDidLoad '+page+'Page');\r\n\r\n    //Unterscheide Seiten:\r\n    switch(page){\r\n      case \"C\":\r\n        console.log(\"C\");\r\n        this.darstellung = new Darstellung(0);\r\n        headTitle[0] = \"C-Gebäude\";\r\n        ueberschrift[0] = \"Folgende Räume sind zur Zeit im C-Gebäude frei:\";\r\n        break;\r\n      case \"D\":\r\n        console.log(\"D\");\r\n        this.darstellung = new Darstellung(1);\r\n        headTitle[0] = \"D-Gebäude\";\r\n        ueberschrift[0] = \"Folgende Räume sind zur Zeit im D-Gebäude frei:\";\r\n        break;\r\n    }\r\n\r\n    console.log(this.darstellung);\r\n    this.darstellung.parseToCampus();\r\n    console.log(this.darstellung);\r\n    this.freeRooms = this.darstellung.freeRooms;\r\n    this.zugang = this.darstellung.zugang;\r\n    console.log(this.freeRooms);\r\n    console.log(this.zugang);\r\n    //Favoriten laden:\r\n    this.getMarkierung();\r\n    console.log(\"Markiert: \"+this.markiert);\r\n    console.log(\"Entmarkiert: \"+this.entmarkiert);\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion erstellt eine Meldung                                                          *\r\n  *   message -> String mit der Nachricht, die die Meldung enthalten soll                     *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  toasts(message:string){\r\n    let toast = this.toastCtrl.create({\r\n        message:  message,\r\n        duration: 2000,\r\n        position: 'middle',\r\n        cssClass: \"my-toast\"\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion zeigt Meldung für Räume mit Zugangsbeschränkung                                *\r\n  *   raum -> String mit dem Namen des Raums                                                  *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  onTip(raum:string){\r\n    this.toasts(\"Für den Raum \"+raum+\" brauchst du eine Zugangsberechtigung.\");\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion markiert bzw. entmarkiert Räume                                                *\r\n  *   item -> Raumname                                                                        *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  makeFav(item) {\r\n    //Gehe alle Räume durch\r\n    var isDelete:number = 0;\r\n    var tmp:string[] = this.markiert;\r\n    //Gehe über alle Favoriten druch\r\n    for(var i:number = 0; i < tmp.length; i++) {\r\n      //Ist der angeklickte Raum in den Favoriten? Lösche ihn\r\n      if(tmp[i] == item) {\r\n        tmp.splice(i,1);\r\n        this.toasts('Raum '+item+' wurde aus der Liste \\\"Markiert\\\" entfernt.');\r\n        isDelete = -1;\r\n        //Der gelöschte Eintrag wird aus den markierten entfernt:\r\n        this.entferneEntmarkiertAusMarkiert(item);\r\n      }\r\n    }\r\n    //Wenn der Raum nicht in den Favoriten ist, füge ihn hinzu\r\n    if(isDelete == 0) {\r\n      tmp.push(item);\r\n      this.toasts('Raum '+item+' wurde markiert.');\r\n      //Der hinzugefügte Eintrag wird aus den entmarkierten gelöscht:\r\n      this.entferneMarkiertAusEntmarkiert();\r\n    }\r\n    localStorage.setItem(\"markiert\", tmp.join(\",\"));\r\n    this.markiert = tmp;\r\n    console.log(\"Markiert: \"+ this.markiert);\r\n    console.log(\"Entmarkiert: \"+ this.entmarkiert);\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion füllt den Array markiert mit allen markierten Räumen                           *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  getMarkierung(){\r\n    if(localStorage.getItem(\"markiert\") != null){\r\n      this.markiert = localStorage.getItem(\"markiert\").split(\",\");\r\n    }\r\n    this.entferneMarkiertAusEntmarkiert();\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion entfernt alle markierten Räume aus den entmarkierten                           *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  entferneMarkiertAusEntmarkiert(){\r\n    //tmp ist nun der Array mit den entmarkierten Räumen.\r\n    var tmp = this.entmarkiert;\r\n    //die markierten Räume werden durchlaufen\r\n    for(var i:number = 0; i<this.markiert.length;i++){\r\n      var index = tmp.indexOf(this.markiert[i]);\r\n      //Wenn ein markierter Raum in den entmarkierten vorkommt...\r\n      if(index != -1){\r\n        //...wird der Raum entfernt\r\n        for(var j:number = index; j < tmp.length-1;j++){\r\n          tmp[j] = tmp[j+1];\r\n        }\r\n        tmp.pop();\r\n      }\r\n    }\r\n    this.entmarkiert = tmp;\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion entfernt alle entmarkierten Räume aus den markierten                           *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  entferneEntmarkiertAusMarkiert(raum:string){\r\n    //tmp ist nun der Array mit den markierten Räumen.\r\n    var tmp = this.markiert;\r\n    console.log(\"Markiert vor Entfernen: \"+tmp);\r\n    if(tmp.length == 1 && tmp[0] == raum){\r\n      tmp.pop();\r\n      this.markiert = tmp;\r\n      console.log(\"Markiert nach Entfernen: \"+tmp);\r\n      this.entmarkiert.push(raum);\r\n      console.log(\"Entmarkiert nach Entfernen aus Markiert: \"+tmp);\r\n      return;\r\n    }\r\n    var index = tmp.indexOf(raum);\r\n    //Wenn ein entmarkierter Raum in den markierten vorkommt...\r\n    if(index != -1){\r\n      //...wird der Raum entfernt\r\n      for(var i:number = index; i < tmp.length-1;i++){\r\n        tmp[i] = tmp[i+1];\r\n        tmp.pop();\r\n      }\r\n    }\r\n    this.markiert = tmp;\r\n    console.log(\"Markiert nach Entfernen: \"+tmp);\r\n    this.entmarkiert.push(raum);\r\n    console.log(\"Entmarkiert nach Entfernen aus Markiert: \"+tmp);\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion leitet ruft die Seite home.html auf                                            *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  BackToCampus(){\r\n    this.navCtrl.setRoot(HomePage);\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion ruft die Seite search.html auf                                                 *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  search() {\r\n    this.navCtrl.setRoot( Search);\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion zeigt den Raumplan eines Raumes an                                             *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  getL(raumname:string){\r\n    console.log(\"GETL\");\r\n    var show2: HTMLElement = document.getElementById('Lehrinnen');\r\n\r\n    //Entfernen der Lehrveranstaltungen:\r\n    var remove = show2.firstChild;\r\n\r\n    while(remove) {\r\n        show2.removeChild(remove);\r\n        remove = show2.firstChild;\r\n    }\r\n\r\n    //Raumplan-Popup einblenden:\r\n    var show: HTMLElement = document.getElementById('Lehraussen');\r\n    show.style.display = \"block\";\r\n    show2.style.display = \"block\";\r\n    var span1: HTMLElement = document.getElementById('span1');\r\n    span1.style.display = \"block\";\r\n    var span2: HTMLElement = document.getElementById('span2');\r\n    span2.style.display = \"block\";\r\n    var button: HTMLElement = document.getElementById('button');\r\n    button.style.display = \"block\";\r\n    //Freie Räume ausblenden:\r\n    var notShow: HTMLElement = document.getElementById('anzeige');\r\n    notShow.style.display = \"none\";\r\n\r\n\r\n    show2.appendChild(this.darstellung.getLehrveranstaltungen(raumname));\r\n    this.scrollTop();\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion blendet den Raumplan eines Raumes aus                                          *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  backClicked(){\r\n    console.log(\"backklicked\");\r\n    //Freie Räume einblenden:\r\n    var show: HTMLElement = document.getElementById('anzeige');\r\n    show.style.display = \"block\";\r\n    //Raumplan-Popup ausblenden:\r\n    var notShow: HTMLElement = document.getElementById('Lehraussen');\r\n    notShow.style.display = \"none\";\r\n    var notShow2: HTMLElement = document.getElementById('Lehrinnen');\r\n    notShow2.style.display = \"none\";\r\n    var span1: HTMLElement = document.getElementById('span1');\r\n    span1.style.display = \"none\";\r\n    var span2: HTMLElement = document.getElementById('span2');\r\n    span2.style.display = \"none\";\r\n    var button: HTMLElement = document.getElementById('button');\r\n    button.style.display = \"none\";\r\n    this.scrollTop();\r\n  }\r\n\r\n  /********************************************************************************************\r\n  *                                                                                           *\r\n  *   Funktion scrollt nach oben                                                              *\r\n  *                                                                                           *\r\n  ********************************************************************************************/\r\n  private scrollTop() {\r\n    this.content.scrollToTop();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/page/page.ts"],"sourceRoot":""}